{"version":3,"sources":["common/data/index.tsx","common/components/PlaylistSearchBar.tsx","common/components/CustomNavbar.tsx","pages/homepage/index.tsx","common/utils.ts","pages/playlist/index.tsx","pages/requests/index.tsx","pages/userprofilepage/index.tsx","pages/manageadministrators/index.tsx","PLAYLISTS_APP.tsx","reportWebVitals.ts","index.tsx"],"names":["userMap","aaron1200","username","displayName","profilePictureURL","playlistIds","followers","following","joeiscool","michelle1721","noah2111","hci2021","songMap","id","title","artist","album","duration","playlistMap","abc","pictureURL","description","songIds","creator","admins","addRequests","song","usersVoted","removeRequests","def","classical","jazz","PlaylistSearchBar","props","state","searchQuery","searchFocused","updateSearchQuery","bind","event","this","setState","target","value","results","Array","from","Object","entries","filter","toLowerCase","includes","Form","className","style","width","onFocus","FormControl","autoFocus","borderColor","dark","placeholder","onChange","Table","position","backgroundColor","marginTop","zIndex","border","borderRadius","length","color","map","playlist","role","display","onClick","window","location","href","Component","CustomNavbar","hash","addEventListener","Navbar","variant","Brand","Nav","user","Text","Link","textDecorationLine","Image","fluid","src","process","maxWidth","marginLeft","Button","reload","toggleLoginModal","React","Homepage","Container","Row","Col","height","xs","slice","padding","to","boxShadow","secondsToMinutesString","seconds","Math","floor","toString","padStart","PlaylistPage","nums","history","useHistory","match","params","playlistId","songs","addRequestCallback","push","pathname","showAddSong","removeRequestCallback","showRemoveSong","alt","reduce","a","b","loggedInUsername","undefined","striped","bordered","hover","i","RequestsTable","requests","request","adminPermissions","handleAcceptRequest","removeVote","addVote","REMOVE_REQUEST_TH_LABELS","RequestsPage","addSearchQuery","selectedAddSongId","addSearchFocused","removeSongIds","recentAddSongRequest","recentRemoveSongRequest","toggleAddSong","toggleRemoveSong","handleAcceptAddRequest","handleAcceptRemoveRequest","prevState","isAddRequest","requestId","find","forceUpdate","songId","concat","replace","Alert","show","Modal","animation","dialogClassName","backdrop","Header","Title","Body","Footer","justifyContent","setTimeout","label","colWidth","colSpan","keys","forEach","element","UserProfile","playlists","ManageAdmin","showHide","selectedAdminUsername","handleModalShowHide","adminName","console","log","PLAYLISTS_APP","loggedInUser","inputUsername","inputPassword","error","handleLoginSubmission","callback","loginCallback","type","path","component","exact","Group","controlId","Label","Control","handleLoginInput","isInvalid","Feedback","fontSize","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b24e159f.chunk.js","sourcesContent":["import {Playlist, Song, User} from \"../types\";\n\nexport interface PlaylistMap {\n    [key: string]: Playlist;\n}\n\ninterface UserMap {\n    [key: string]: User;\n}\n\nexport const userMap: UserMap = {\n    aaron1200: {\n        username: \"aaron1200\",\n        displayName: \"Aaron Pradhan\",\n        profilePictureURL: \"/aaron1200.jpg\",\n        playlistIds: [\"abc\"],\n        followers: 20,\n        following: 31\n    },\n    joeiscool: {\n        username: \"joeiscool\",\n        displayName: \"Joe Adams\",\n        profilePictureURL: \"/joe.jpg\",\n        playlistIds: [],\n        followers: 39,\n        following: 13\n    },\n    michelle1721: {\n        username: \"michelle1721\",\n        displayName: \"Michelle Thompson\",\n        profilePictureURL: \"/michelle.jpg\",\n        playlistIds: [],\n        followers: 1203,\n        following: 101\n    },\n    noah2111: {\n        username: \"noah2111\",\n        displayName: \"Noah Smith\",\n        profilePictureURL: \"/noah.jpg\",\n        playlistIds: [],\n        followers: 12,\n        following: 11\n    },\n    hci2021: {\n        username: \"hci2021\",\n        displayName: \"HCI Testing Account\",\n        profilePictureURL: \"/hci.jpg\",\n        playlistIds: [],\n        followers: 12,\n        following: 42\n    }\n}\n\ninterface SongMap {\n    [key: string]: Song;\n}\n\nexport const songMap: SongMap = {\n    \"123\": {\n        id: \"123\",\n        title: \"(Don't Fear) The Reaper\",\n        artist: \"Blue Öyster Cult\",\n        album: \"Agents of Fortune\",\n        duration: 308\n    },\n    \"456\": {\n        id: \"456\",\n        title: \"Don't Stop Me Now\",\n        artist: \"Queen\",\n        album: \"Jazz\",\n        duration: 209\n    },\n    \"s1\": {\n        id: \"s1\",\n        title: \"Get Back\",\n        artist: \"The Beatles\",\n        album: \"Let It Be\",\n        duration: 187\n    },\n    \"s2\": {\n        id: \"s2\",\n        title: \"Revolution\",\n        artist: \"The Beatles\",\n        album: \"The Beatles 1967 - 1970\",\n        duration: 205\n    },\n    \"s3\" : {\n        id: \"s3\",\n        title: \"Bangarang\",\n        artist: \"Skrillex\",\n        album: \"Bang!\",\n        duration: 181\n    },\n    \"s4\" : {\n        id: \"s4\",\n        title: \"Hero\",\n        artist: \"Pegboard Nerds\",\n        album: \"Hero\",\n        duration: 222\n    },\n    \"s5\" : {\n        id: \"s5\",\n        title: \"Life in Grey\",\n        artist: \"Point Point\",\n        album: \"Contrastive Focus Reduplication\",\n        duration: 224\n    },\n    \"s6\" : {\n        id: \"s6\",\n        title: \"Let it Be\",\n        artist: \"The Beatles\",\n        album: \"Let it Be\",\n        duration: 243\n    },\n    \"s7\" : {\n        id: \"s7\",\n        title: \"Baby\",\n        artist: \"Justin Bieber\",\n        album: \"My World 2.0\",\n        duration: 215\n    },\n    \"s8\": {\n        id: \"s8\",\n        title: \"Sonata Pathetique: Movement 1\",\n        artist: \"Ludwig van Beethoven\",\n        album: \"Beethoven: Piano Sonatas\",\n        duration: 400\n    },\n    \"s9\": {\n        id: \"s9\",\n        title: \"Take Five\",\n        artist: \"The Dave Brubeck Quartet\",\n        album: \"Time Out\",\n        duration: 324\n    }\n}\n\nexport const playlistMap: PlaylistMap = {\n    abc: {\n        id: \"abc\",\n        title: \"60s/70s Rock\",\n        pictureURL: \"/album.jpg\",\n        description: \"Best rock songs of the 1960s and 1970s\",\n        songIds: [\"123\", \"456\", \"s7\"],\n        creator: \"aaron1200\",\n        admins: [\"joeiscool\", \"michelle1721\"],\n        addRequests: [\n            {\n                id: \"r1\",\n                song: songMap[\"s1\"],\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\", \"bigdolphin\"]\n            },\n            {\n                id: \"r2\",\n                song: songMap[\"s2\"],\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\"]\n            }\n        ],\n        removeRequests: [\n            {\n                id: \"r1\",\n                song: songMap[\"456\"],\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\"]\n            }\n        ]\n    },\n    def: {\n        id: \"def\",\n        title: \"Hype EDM\",\n        pictureURL: \"/bike.jpg\",\n        description: \"Big bass drops and crazy synths\",\n        songIds: [\"s3\"],\n        creator: \"hci2021\",\n        admins: [\"joeiscool\", \"michelle1721\"],\n        addRequests: [\n            {\n                id: \"r1\",\n                song: songMap[\"s4\"],\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\", \"bigdolphin\"]\n            },\n            {\n                id: \"r2\",\n                song: songMap[\"s5\"],\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\"]\n            }\n        ],\n        removeRequests: []\n    },\n    classical: {\n        id: \"classical\",\n        title: \"Classical music for studying\",\n        pictureURL: \"/classical.jpg\",\n        description: \"Relaxing classical music for studying - no lyrics\",\n        songIds: [\"s8\"],\n        creator: \"joeiscool\",\n        admins: [],\n        addRequests: [],\n        removeRequests: []\n    },\n    jazz: {\n        id: \"jazz\",\n        title: \"Smooth Jazz\",\n        pictureURL: \"/jazz.jpg\",\n        description: \"Warm jazz for cool nights\",\n        songIds: [\"s9\"],\n        creator: \"michelle1721\",\n        admins: [],\n        addRequests: [],\n        removeRequests: []\n    }\n}\n","import React, { ChangeEvent, Component } from 'react'\nimport { Form, FormControl, Table } from 'react-bootstrap';\nimport { playlistMap } from '../data';\n\n\ninterface Props {\n  placeholder: string;\n  dark?: boolean; \n}\n\ninterface State {\n  searchQuery: string;\n  searchFocused: boolean;\n}\n\nexport default class PlaylistSearchBar extends Component<Props, State>  {\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      searchQuery: \"\",\n      searchFocused: false\n    }\n\n    this.updateSearchQuery = this.updateSearchQuery.bind(this);\n  }\n\n  updateSearchQuery(event: ChangeEvent<HTMLInputElement>) {\n    this.setState({\n        searchQuery: event.target.value\n    });\n  }\n\n  render() {\n\n   let results = Array.from(Object.entries(playlistMap))\n                      .filter(([_, playlist]) =>\n                          playlist.title.toLowerCase().includes(this.state.searchQuery.toLowerCase()))\n\n    return (\n      <Form className=\"d-flex mx-3\" style={{width: \"305px\"}} onFocus={() => {this.setState({})}}>\n        <FormControl\n                autoFocus\n                style={{borderColor: this.props.dark ? \"black\" : \"white\"}}\n                placeholder={this.props.placeholder}\n                value={this.state.searchQuery}\n                onChange={this.updateSearchQuery}\n            />\n            {\n                this.state.searchQuery ?\n                    (\n                        <Table className=\"w-auto\" style={{position: \"absolute\", backgroundColor: \"white\", marginTop: \"35px\", zIndex: 1000, border: \"lightgray 2px solid\", borderRadius: \"0px 0px 5px 5px\"}}>\n                            <thead>\n                            <tr>\n                                <th>Title</th>\n                                <th>Creator</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            { results.length === 0 && \n                                <tr>\n                                  <td>\n                                    <span style={{color: 'gray'}}>Nothing found.</span>\n                                  </td>\n                                  <td>\n                                    \n                                  </td>\n                                </tr> \n                            }\n\n                            {\n                                results.map(([_, playlist]) => (\n                                        <tr className=\"dropdown-item\"\n                                            role=\"button\"\n                                            style={{display: \"table-row\"}}\n                                            onClick={() => { \n                                              window.location.href = `#/playlist/${playlist.id}`\n                                              this.setState({searchFocused: false, searchQuery: \"\"}); \n                                            }}\n                                            key={playlist.id}\n                                        >\n                                            <td>{playlist.title}</td>\n                                            <td>{playlist.creator}</td>\n                                        </tr>\n                                    ))\n                            }\n                            </tbody>\n                        </Table>\n                    )\n                    : \"\"\n            }\n    </Form>\n    )\n  }\n}\n","import React from 'react'\nimport {Navbar, Button, Nav, Image} from 'react-bootstrap'\nimport {User} from '../types'\nimport PlaylistSearchBar from './PlaylistSearchBar'\n\ninterface CustomNavbarProps {\n    user: User | null;\n    toggleLoginModal: (callback?: () => void) => () => void;\n}\n\ninterface CustomNavbarState {\n    hash: string;\n}\n\nexport default class CustomNavbar extends React.Component<CustomNavbarProps, CustomNavbarState> {\n\n    constructor(props: CustomNavbarProps) {\n        super(props);\n\n        this.state = {\n            hash: window.location.hash\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('hashchange', () => {\n            this.setState({\n                hash: window.location.hash\n            })\n        })\n    }\n\n\n    render() {\n        return (\n            <Navbar style={{backgroundColor: \"#6eaedd\"}} variant=\"dark\" className=\"museo-300\">\n                <Navbar.Brand href=\"#\">\n                    <p className=\"museo-display-black m-0\">Spotify Collaborative Playlists</p>\n                </Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    {this.state.hash !== \"#/\" && <PlaylistSearchBar placeholder=\"Search for playlists...\"/>}\n                </Nav>\n                {\n                    this.props.user ?\n                        <>\n                            <Navbar.Text >\n                                Logged in as\n                                <Nav.Link className=\"d-inline p-0 ml-2\" href={`#/user/${this.props.user.username}`} style={{textDecorationLine: \"underline\"}} >\n                                <span>\n                                    {this.props.user.displayName}\n                                    <Image fluid src={process.env.PUBLIC_URL + this.props.user.profilePictureURL}\n                                           style={{maxWidth: \"30px\", marginLeft: \"5px\"}}/>\n                                </span>\n                                </Nav.Link>\n                            </Navbar.Text>\n                            <Button variant=\"light\" className=\"ml-5\" onClick={() => window.location.reload()}>Log out</Button>\n                        </> :\n                        <Button variant=\"light\" onClick={this.props.toggleLoginModal()}>\n                            Log in with Spotify\n                        </Button>\n                }\n            </Navbar>\n        )\n    }\n}\n\n","import React from 'react'\nimport { Col, Container, Row, Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport PlaylistSearchBar from '../../common/components/PlaylistSearchBar';\nimport {playlistMap, userMap} from '../../common/data';\n\nclass Homepage extends React.Component {\n    render() {\n        return (\n            <Container className=\"museo-300\">\n                <Row>\n                    <Col className=\"text-left d-flex flex-column justify-content-center align-items-center\" style={{height: \"50vh\"}}>\n                        <h1 className=\"museo-display-black mb-3\">\n                            Spotify Collaborative Playlists\n                        </h1>\n                        <PlaylistSearchBar placeholder=\"Search for playlists...\" dark={true}/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12}>\n                        <h3 className=\"museo-display-light mb-1\">\n                            Recommended Playlists\n                        </h3>\n                        <hr style={{border: \"1px solid lightgrey\"}} className=\"mb-4\"/>\n                    </Col>\n                    { Array.from(Object.entries(playlistMap))\n                        .slice(0, 4)\n                        .map(([_, playlist]) => {\n                            return (   \n                                <Col xs=\"3\" style={{padding: \".5em\"}} key={playlist.id}>\n                                    <Link to={`/playlist/${playlist.id}`}>\n                                        <div style={{boxShadow: \"1px 1px 10px gray\", padding: \".75em\", borderRadius: \"10px\", height: \"100%\"}}> \n                                            <Image className=\"mb-3\" fluid src={process.env.PUBLIC_URL + playlist.pictureURL} />\n                                            <p className=\"mb-1 museo-700\">{playlist.title}</p>\n                                            <p className=\"mb-1\">{userMap[playlist.creator].displayName}</p>\n                                            <p className=\"mb-1\">{playlist.songIds.length} {playlist.songIds.length === 1 ? \"song\" : \"songs\"}</p>\n                                        </div>\n                                    </Link>\n                                </Col>\n                            )\n                        })\n\n\n                    }\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Homepage;","const SECONDS_PER_MINUTE = 60;\nconst MINUTES_PER_HOUR = 60;\n\nexport function secondsToMinutesString(seconds: number) {\n    return `${Math.floor(seconds / SECONDS_PER_MINUTE)}:${(seconds % SECONDS_PER_MINUTE).toString().padStart(2, \"0\")}`;\n}\n\nexport function secondsToHoursString(seconds: number) {\n    return `${Math.floor(seconds / (SECONDS_PER_MINUTE * MINUTES_PER_HOUR))} hr ${(Math.floor(seconds % (SECONDS_PER_MINUTE * MINUTES_PER_HOUR) / SECONDS_PER_MINUTE))} min`;\n}\n\nexport function sum(nums: number[]) {\n    return nums.reduce((a, b) => a + b, 0)\n}\n","import React from 'react';\nimport {Button, Col, Container, Row, Table, Image} from \"react-bootstrap\";\nimport {playlistMap, songMap, userMap} from \"../../common/data\";\nimport {secondsToHoursString, secondsToMinutesString, sum} from \"../../common/utils\";\nimport {Link} from \"react-router-dom\";\nimport {useHistory} from \"react-router\";\n\ninterface Props {\n    match: {\n        params: {\n            playlistId: string;\n        }\n    },\n    loggedInUsername?: string;\n    toggleLoginModal: (callback?: () => void) => () => void;\n}\n\nexport default function PlaylistPage(props: Props) {\n    const history = useHistory();\n\n    const playlist = playlistMap[props.match.params.playlistId];\n    const creator = userMap[playlist.creator];\n    const songs = playlist.songIds.map(id => songMap[id]);\n\n    const addRequestCallback = () => history.push({\n        pathname: `/playlist/${playlist.id}/requests`,\n        state: {showAddSong: true}\n    });\n\n    const removeRequestCallback = () => history.push({\n        pathname: `/playlist/${playlist.id}/requests`,\n        state: {showRemoveSong: true}\n    });\n\n    return (\n        <Container>\n            <Row className=\"my-4\">\n                <Col xs={4}>\n                    <Image src={process.env.PUBLIC_URL + playlist.pictureURL} alt=\"Album cover\" fluid/>\n                </Col>\n                <Col xs={4}>\n                    <p className=\"museo-display-light m-0\">Playlist</p>\n                    <h1 className=\"museo-display-black\">{playlist.title}</h1>\n                    <p className=\"museo-300 mb-0\">Created by <Link to={`/user/${creator.username}`}>{creator.displayName}</Link></p>\n                    <p className=\"museo-300 italic\">{songs.length} {songs.length === 1 ? \"song\" : \"songs\"}, {secondsToHoursString(sum(songs.map(song => song.duration)))}</p>\n                    <Button variant=\"outline-dark\" className=\"museo-300\">Share</Button>\n                </Col>\n                <Col xs={4} className=\"text-right\">\n                    { (creator.username !== props.loggedInUsername) && (\n                        <div>\n                            <Button variant=\"outline-primary\" className=\"museo-300 mb-2\"\n                                    onClick={props.loggedInUsername === undefined ? props.toggleLoginModal(addRequestCallback) : addRequestCallback}>\n                                Request to add a song\n                            </Button>\n                            <br />\n                            <Button variant=\"outline-danger\" className=\"museo-300 mb-2\"\n                                    onClick={props.loggedInUsername === undefined ? props.toggleLoginModal(removeRequestCallback) : removeRequestCallback}>\n                                Request to remove a song\n                            </Button>\n                            <Link to={`/playlist/${playlist.id}/requests`}>\n                                <Button variant=\"outline-secondary\" className=\"museo-300 mb-2\">View song requests</Button><br />\n                            </Link>\n                            <p className=\"museo-300 mb-2\">If you're an admin of this playlist, log in to manage song requests.</p>\n                        </div>\n                    )}\n                    { (creator.username === props.loggedInUsername) && (\n                        <div>\n                            <Link to={`/playlist/${playlist.id}/requests`}>\n                                <Button variant=\"primary\" className=\"museo-300 mb-2\">Manage Song Requests</Button><br />\n                            </Link>\n                            <Link to={`/playlist/${playlist.id}/admins`}>\n                                <Button variant=\"outline-secondary\" className=\"museo-300 mb-2\">Manage Administrators</Button><br />\n                            </Link>\n                        </div>\n                    )}\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Table striped bordered hover className=\"museo-300\">\n                        <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Title</th>\n                            <th>Artist</th>\n                            <th>Album</th>\n                            <th>Date Added</th>\n                            <th>Duration</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            Array.from(songs.entries()).map(([i, song]) => (\n                                <tr key={song.id}>\n                                    <td>{i + 1}</td>\n                                    <td>{song.title}</td>\n                                    <td>{song.artist}</td>\n                                    <td>{song.album}</td>\n                                    <td>2021-03-30</td>\n                                    <td>{secondsToMinutesString(song.duration)}</td>\n                                </tr>\n                            ))\n                        }\n                        </tbody>\n                    </Table>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n","import React, { Component } from 'react';\nimport { Alert, Button, Col, Container, Form, FormControl, Modal, Row, Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { playlistMap, songMap, userMap } from \"../../common/data\";\nimport { secondsToMinutesString } from \"../../common/utils\";\nimport { SongRequest } from \"../../common/types\";\nimport \"./style.css\";\nimport { ChangeEvent } from 'react';\nimport { Playlist } from '../../common/types';\n\ninterface RequestsTableProps {\n    requests: SongRequest[];\n    adminPermissions: boolean;\n    handleAcceptRequest: (songId: string, requestId: string) => () => void;\n    removeVote: (requestId: string) => () => void;\n    addVote: (requestId: string) => () => void;\n    loggedInUsername?: string;\n    toggleLoginModal: (callback?: () => void) => () => void;\n}\n\nclass RequestsTable extends Component<RequestsTableProps> {\n    render() {\n        return (\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th className=\"customHeader-1\">#</th>\n                        <th className=\"customHeader-2\">Title</th>\n                        <th className=\"customHeader-2\">Artist</th>\n                        <th className=\"customHeader-2\">Album</th>\n                        <th className=\"customHeader-1\">Date Added</th>\n                        <th className=\"customHeader-1\">Duration</th>\n                        <th className=\"customHeader-1\">Votes</th>\n                        <th className=\"customHeader-2\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        Array.from(this.props.requests.entries()).map(([i, request]) => (\n                            <tr key={request.id}>\n                                <td>{i + 1}</td>\n                                <td>{request.song.title}</td>\n                                <td>{request.song.artist}</td>\n                                <td>{request.song.album}</td>\n                                <td>2021-03-30</td>\n                                <td>{secondsToMinutesString(request.song.duration)}</td>\n                                <td>{request.usersVoted.length}</td>\n                                <td>\n                                    {this.props.adminPermissions ? <Button variant=\"primary\"\n                                                                           onClick={this.props.handleAcceptRequest(request.song.id, request.id)}>Accept\n                                            Request</Button> :\n                                        (this.props.loggedInUsername !== undefined && request.usersVoted.includes(this.props.loggedInUsername) ?\n                                            <Button variant=\"outline-secondary\" onClick={this.props.removeVote(request.id)}>\n                                                Remove Vote for Request\n                                            </Button> :\n                                            <Button variant=\"outline-secondary\"\n                                                    onClick={this.props.loggedInUsername === undefined ? this.props.toggleLoginModal(this.props.addVote(request.id)) : this.props.addVote(request.id) }\n                                            >\n                                                Vote for Request\n                                            </Button>)\n                                    }\n                                </td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n            </Table>\n        );\n    }\n}\n\ninterface Props {\n    match: {\n        params: {\n            playlistId: string;\n        }\n    }\n    location: {\n        state?: LocationState;\n    },\n    loggedInUsername?: string;\n    toggleLoginModal: (callback?: () => void) => () => void;\n    history: any; // todo fix this\n}\n\ninterface State {\n    showAddSong: boolean;\n    showRemoveSong: boolean;\n    addSearchQuery: string;\n    selectedAddSongId: string;\n    addSearchFocused: boolean;\n    removeSongIds: string[];\n    recentAddSongRequest: boolean;\n    recentRemoveSongRequest: boolean;\n}\n\ninterface LocationState {\n    showAddSong?: boolean;\n    showRemoveSong?: boolean;\n}\n\nconst REMOVE_REQUEST_TH_LABELS = {\n    \"#\": 1,\n    \"Title\": 2,\n    \"Artist\": 2,\n    \"Album\": 2,\n    \"Date Added\": 2,\n    \"Duration\": 1,\n    \"Actions\": 2\n}\n\nexport default class RequestsPage extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            showAddSong: (this.props.location.state !== undefined) && (this.props.location.state.showAddSong === true),\n            showRemoveSong: (this.props.location.state !== undefined) && (this.props.location.state.showRemoveSong === true),\n            addSearchQuery: \"\",\n            selectedAddSongId: \"\",\n            addSearchFocused: false,\n            removeSongIds: [],\n            recentAddSongRequest: false,\n            recentRemoveSongRequest: false\n        }\n        this.toggleAddSong = this.toggleAddSong.bind(this);\n        this.toggleRemoveSong = this.toggleRemoveSong.bind(this);\n        this.updateSearchQuery = this.updateSearchQuery.bind(this);\n        this.handleAcceptAddRequest = this.handleAcceptAddRequest.bind(this);\n        this.handleAcceptRemoveRequest = this.handleAcceptRemoveRequest.bind(this);\n        this.removeVote = this.removeVote.bind(this);\n        this.addVote = this.addVote.bind(this);\n    }\n\n    toggleAddSong() {\n        this.setState(prevState => ({ addSearchQuery: \"\", addSearchFocused: false, selectedAddSongId: \"\", showAddSong: !prevState.showAddSong }));\n    }\n\n    toggleRemoveSong() {\n        this.setState(prevState => ({ removeSongIds: [], showRemoveSong: !prevState.showRemoveSong }));\n    }\n\n    removeVote(isAddRequest: boolean) {\n        return (requestId: string) => () => {\n            if (this.props.loggedInUsername !== undefined) {\n                let requestList;\n                if (isAddRequest) {\n                    requestList = playlistMap[this.props.match.params.playlistId].addRequests;\n                } else {\n                    requestList = playlistMap[this.props.match.params.playlistId].removeRequests;\n                }\n                const request = requestList.find(request => request.id === requestId);\n                if (request !== undefined) {\n                    request.usersVoted = request.usersVoted.filter(user => user !== \"hci2021\");\n                    this.forceUpdate();\n                }\n            }\n        };\n    }\n\n    addVote(isAddRequest: boolean) {\n        return (requestId: string) => () => {\n            if (this.props.loggedInUsername !== undefined) {\n                let requestList;\n                if (isAddRequest) {\n                    requestList = playlistMap[this.props.match.params.playlistId].addRequests;\n                } else {\n                    requestList = playlistMap[this.props.match.params.playlistId].removeRequests;\n                }\n                const request = requestList.find(request => request.id === requestId);\n                if (request !== undefined && !request.usersVoted.includes(\"hci2021\")) {\n                    request.usersVoted.push(\"hci2021\");\n                    this.forceUpdate();\n                }\n            }\n        }\n    }\n\n    updateSearchQuery(event: ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            addSearchQuery: event.target.value\n        });\n    }\n\n    handleAcceptAddRequest(songId: string, requestId: string) {\n        return () => {\n            let playlist: Playlist = playlistMap[this.props.match.params.playlistId];\n            playlist.addRequests = playlist.addRequests.filter((request) => request.id !== requestId);\n            playlist.songIds = playlist.songIds.concat(songId);\n\n            playlistMap[this.props.match.params.playlistId] = playlist;\n            this.forceUpdate();\n        }\n    }\n\n    handleAcceptRemoveRequest(songId: string, requestId: string) {\n        return () => {\n            let playlist: Playlist = playlistMap[this.props.match.params.playlistId];\n            playlist.removeRequests = playlist.removeRequests.filter((request) => request.id !== requestId);\n            playlist.songIds = playlist.songIds.filter((id) => id !== songId);\n\n            playlistMap[this.props.match.params.playlistId] = playlist;\n            this.forceUpdate();\n        }\n    }\n\n    render() {\n        const playlist = playlistMap[this.props.match.params.playlistId];\n        const creator = userMap[playlist.creator];\n        const songs = playlist.songIds.map(id => songMap[id]);\n\n        // replace instead of push because you can't push the same path\n        const addRequestCallback = () => this.props.history.replace({\n            state: {showAddSong: true}\n        });\n\n        const removeRequestCallback = () => this.props.history.replace({\n            state: {showRemoveSong: true}\n        });\n\n        const finishRequestingSongRemovals = () => {\n            this.state.removeSongIds.forEach(element => {\n                // todo fix s1234 repeated key\n                playlistMap[playlist.id].removeRequests.push({id: `r${playlistMap[playlist.id].removeRequests.length + 1}`, song: songMap[element], usersVoted: [\"hci2021\"]});\n            });\n            this.setState({addSearchQuery: \"\", addSearchFocused: false, removeSongIds: [], showAddSong: false, recentRemoveSongRequest: true});\n            setTimeout(function() {\n                //@ts-ignore (sorry!)\n                this.setState({recentRemoveSongRequest: false})\n            }.bind(this), 3000)\n            this.toggleRemoveSong();\n        };\n\n        return (\n            <Container className=\"museo-300\">\n                <Row className=\"mt-4\">\n                    <Col xs={12}>\n                        <Link to={`/playlist/${playlist.id}`}>&#8592; Go back to playlist</Link>\n                    </Col>\n                </Row>\n                <Row className=\"mb-4\">\n                    <Col xs={8}>\n                        <h1 className=\"museo-display-black\">Song Requests</h1>\n                        Playlist: <Link to={`/playlist/${playlist.id}`}>{playlist.title}</Link> by <Link to={`/user/${creator.username}`}>{creator.displayName}</Link>\n                    </Col>\n                    <Col xs={4} className=\"text-right\">\n                        {creator.username !== this.props.loggedInUsername && (\n                            <div>\n                                <Button variant=\"outline-primary\" className=\"museo-300 mb-2\"\n                                        onClick={this.props.loggedInUsername === undefined ? this.props.toggleLoginModal(addRequestCallback) : this.toggleAddSong}>\n                                    Request to add a song\n                                </Button>\n                                <br />\n                                <Button variant=\"outline-danger\" className=\"museo-300 mb-2\"\n                                        onClick={this.props.loggedInUsername === undefined ? this.props.toggleLoginModal(removeRequestCallback) : this.toggleRemoveSong}>\n                                    Request to remove a song\n                                </Button>\n                            </div>\n                        )}\n                    </Col>\n                </Row>\n                <Row className=\"mb-4\">\n                    <Col>\n                        <h2 className=\"museo-display-light\">Add Song Requests</h2>\n                        <Alert variant=\"success\" show={this.state.recentAddSongRequest}>\n                            Your request to add a song from the playlist was made successfully.\n                        </Alert> \n                        <RequestsTable handleAcceptRequest={this.handleAcceptAddRequest}\n                                       adminPermissions={creator.username === this.props.loggedInUsername}\n                                       requests={playlist.addRequests}\n                                       removeVote={this.removeVote(true)}\n                                       addVote={this.addVote(true)}\n                                       loggedInUsername={this.props.loggedInUsername}\n                                       toggleLoginModal={this.props.toggleLoginModal}\n                        />\n                    </Col>\n                </Row>\n                <Row className=\"mb-4\">\n                    <Col>\n                        <h2 className=\"museo-display-light\">Remove Song Requests</h2>\n                        <Alert variant=\"success\" show={this.state.recentRemoveSongRequest}>\n                            Your request to remove a song from the playlist was made successfully.\n                        </Alert> \n                        <RequestsTable handleAcceptRequest={this.handleAcceptRemoveRequest}\n                                       adminPermissions={creator.username === this.props.loggedInUsername}\n                                       requests={playlist.removeRequests}\n                                       removeVote={this.removeVote(false)}\n                                       addVote={this.addVote(false)}\n                                       loggedInUsername={this.props.loggedInUsername}\n                                       toggleLoginModal={this.props.toggleLoginModal}\n                        />\n                    </Col>\n                </Row>\n\n                <Modal show={this.state.showAddSong} animation={false} dialogClassName=\"larger-width-modal museo-300\" backdrop=\"static\">\n                    <Modal.Header>\n                        <Modal.Title className=\"museo-display-black\">Request to add a song</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body className=\"px-3\">\n                        <Form\n                            onFocus={() => this.setState({ addSearchFocused: true })}\n                        >\n                            <FormControl\n                                autoFocus\n                                className=\"my-2 w-auto\"\n                                placeholder=\"Type the song title here...\"\n                                value={this.state.addSearchQuery}\n                                onChange={this.updateSearchQuery}\n                            />\n                            {\n                                (this.state.addSearchQuery && (!this.state.selectedAddSongId || this.state.addSearchFocused)) ?\n                                    (\n                                        <Table className=\"mx-3 w-auto\">\n                                            <thead>\n                                                <tr>\n                                                    <th>Song</th>\n                                                    <th>Artist</th>\n                                                    <th>Album</th>\n                                                    <th>Duration</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    Array.from(Object.entries(songMap))\n                                                        .filter(([_, song]) =>\n                                                            song.title.toLowerCase().includes(this.state.addSearchQuery.toLowerCase()))\n                                                        .map(([_, song]) => (\n                                                            <tr className=\"dropdown-item\"\n                                                                role=\"button\"\n                                                                style={{ display: \"table-row\" }}\n                                                                onClick={() => this.setState({ selectedAddSongId: song.id, addSearchFocused: false })}\n                                                                key={song.id}\n                                                            >\n                                                                <td>{song.title}</td>\n                                                                <td>{song.artist}</td>\n                                                                <td>{song.album}</td>\n                                                                <td>{secondsToMinutesString(song.duration)}</td>\n                                                            </tr>\n                                                        ))\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    )\n                                    : \"\"\n                            }\n                            {\n                                this.state.selectedAddSongId ? songMap[this.state.selectedAddSongId].title : \"\"\n                            }\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer style={{ justifyContent: \"flex-end\" }}>\n                        <Button variant=\"outline-secondary\" onClick={this.toggleAddSong}>\n                            Cancel and Close\n                        </Button>\n                        {\n                            this.state.selectedAddSongId ? (\n                                <Button variant=\"primary\" onClick={() => {\n                                    playlistMap[playlist.id].addRequests.push({id: `r${playlistMap[playlist.id].addRequests.length + 1}`, song: songMap[this.state.selectedAddSongId], usersVoted: [\"hci2021\"]});\n                                    this.setState({addSearchQuery: \"\", addSearchFocused: false, selectedAddSongId: \"\", showAddSong: false, recentAddSongRequest: true});\n                                    setTimeout(function() {\n                                        //@ts-ignore (sorry!)\n                                        this.setState({recentAddSongRequest: false})\n                                    }.bind(this), 3000)\n                                }}>\n                                    Request this song\n                                </Button>\n                            ) : \"\"\n                        }\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={this.state.showRemoveSong} animation={false} dialogClassName=\"larger-width-modal museo-300\" backdrop=\"static\">\n                    <Modal.Header>\n                        <Modal.Title className=\"museo-display-black\">Request to remove a song</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    {\n                                        Array.from(Object.entries(REMOVE_REQUEST_TH_LABELS)).map(([label, colWidth]) =>\n                                            <th key={label} className={\"customHeader-\" + colWidth}>{label}</th>\n                                        )\n                                    }\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    Array.from(songs.entries()).map(([i, song]) => (\n                                        this.state.removeSongIds.includes(song.id) ? (\n                                            <tr key={song.id}>\n                                                <td colSpan={Object.keys(REMOVE_REQUEST_TH_LABELS).length}>\n                                                    You requested to remove {song.title}.&nbsp;\n                                                <Button\n                                                        variant=\"outline-secondary\"\n                                                        onClick={() => this.setState(prevState => ({ removeSongIds: prevState.removeSongIds.filter(id => id !== song.id) }))}\n                                                    >\n                                                        Undo\n                                                </Button>\n                                                </td>\n                                            </tr>\n                                        ) : (\n                                                <tr key={song.id}>\n                                                    <td>{i + 1}</td>\n                                                    <td>{song.title}</td>\n                                                    <td>{song.artist}</td>\n                                                    <td>{song.album}</td>\n                                                    <td>2021-03-30</td>\n                                                    <td>{secondsToMinutesString(song.duration)}</td>\n                                                    <td><Button variant=\"outline-danger\" onClick={() => this.setState(prevState => {\n                                                        if (!prevState.removeSongIds.includes(song.id)) {\n                                                            return { removeSongIds: prevState.removeSongIds.concat(song.id) };\n                                                        }\n                                                        return { removeSongIds: prevState.removeSongIds };\n                                                    })}>Request to remove</Button></td>\n                                                </tr>\n                                            )\n                                    ))\n                                }\n                            </tbody>\n                        </Table>\n                    </Modal.Body>\n                    <Modal.Footer style={{ justifyContent: \"flex-end\" }}>\n                        <Button variant=\"primary\" onClick={finishRequestingSongRemovals}>\n                            Finish requesting song removals\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        );\n    }\n}","import React from 'react'\nimport { Col, Container, Row, Image, Table } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport { playlistMap, userMap } from \"../../common/data\";\n\ninterface Props {\n    match: {\n        params: {\n            username: string;\n        }\n    }\n}\n\nexport default class UserProfile extends React.Component<Props> {\n    render() {\n        const user = userMap[this.props.match.params.username];\n        const playlists = user.playlistIds.map(id => playlistMap[id]);\n        return (\n            <Container className=\"museo-300\">\n                <Row className=\"my-4\">\n                    <Col xs={4}>\n                        <Image src={process.env.PUBLIC_URL + user.profilePictureURL} alt={`${user.displayName}'s profile`} fluid />\n                    </Col>\n                    <Col xs={8}>\n                        <h1 className=\"museo-display-black\">{user.displayName}</h1>\n                        <p className=\"m-0\">{user.followers} followers</p>\n                        <p>{playlists.length} playlists</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <h3 className=\"museo-display-light\">User Playlists</h3>\n                        <Table striped bordered hover className=\"museo-300\">\n                            <thead>\n                            <tr>\n                                <th>Title</th>\n                                <th>Date Created</th>\n                                <th>Number of Songs</th>\n                                <th>Duration</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                Array.from(Object.entries(playlistMap))\n                                    .filter(([_, playlist]) => playlist.creator === user.username)\n                                    .map(([_, playlist]) => {\n                                        return (\n                                            <tr key={playlist.id}>\n                                                <td><Link to={`/playlist/${playlist.id}`}>{playlist.title}</Link></td>\n                                                <td>2021-03-30</td>\n                                                <td>{playlist.songIds.length}</td>\n                                                <td>9 min</td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\n","import React from 'react'\nimport { Button, Container, Row, Col, Modal, Form, FormControl, Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { playlistMap, userMap } from \"../../common/data\";\nimport { ChangeEvent } from 'react';\n\ninterface Props {\n    match: {\n        params: {\n            playlistId: string;\n        }\n    }\n}\n\ninterface State {\n    showHide: boolean;\n    searchQuery: string;\n    selectedAdminUsername: string;\n    searchFocused: boolean;\n}\n\nexport default class ManageAdmin extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            showHide: false,\n            searchQuery: \"\",\n            selectedAdminUsername: \"\",\n            searchFocused: false\n        }\n        this.handleModalShowHide = this.handleModalShowHide.bind(this);\n        this.updateSearchQuery = this.updateSearchQuery.bind(this);\n    }\n\n    handleModalShowHide() {\n        this.setState({ showHide: !this.state.showHide })\n    }\n\n    updateSearchQuery(event: ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            searchQuery: event.target.value\n        });\n    }\n\n    render() {\n        const playlist = playlistMap[this.props.match.params.playlistId];\n        const creator = userMap[playlist.creator];\n        return (\n            <Container className=\"museo-300\">\n                <Row className=\"my-4\">\n                    <Col xs={12}>\n                        <Link to={`/playlist/${playlist.id}`}>&#8592; Go back to playlist</Link>\n                        <h1 className=\"museo-display-black\">Manage Administrators</h1>\n                        <p>Playlist: <Link to={`/playlist/${playlist.id}`}>{playlist.title}</Link> by <Link to={`/user/${creator.username}`}>{creator.displayName}</Link></p>\n                    </Col>\n                </Row>\n                <Row className=\"mb-4\">\n                    <Col xs={12}>\n                        <h3 className=\"museo-display-light\">Current Administrators</h3>\n                        {playlist.admins.length > 0 && \n                            <ul>\n                                {playlist.admins.map((adminName) => (\n                                    <li key={adminName}>\n                                        <p className=\"m-0\">{adminName}</p>\n                                    </li>\n                                ))}\n                            </ul>\n                        }\n                        {!(playlist.admins.length > 0) && <p>There are no admins for this playlist. Add one to help manage requests.</p>}\n                    </Col>\n                </Row>\n                <Row className=\"mb-2\">\n                    <Col xs={12}>\n                        <Button variant=\"primary\" onClick={() => this.handleModalShowHide()}>Add new Administrator</Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12}>\n                        <Button variant=\"danger\">Remove an Administrator</Button>\n                    </Col>\n                </Row>\n\n                <Modal show={this.state.showHide} backdrop=\"static\" dialogClassName=\"museo-300\">\n                    <Modal.Header onClick={() => this.handleModalShowHide()}>\n                        <Modal.Title className=\"museo-display-black\">Add new Administrator</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form onFocus={() => this.setState({ searchFocused: true })}>\n                            <FormControl autoFocus\n                                className=\"mx-3 my-2 w-auto\"\n                                placeholder=\"Type a username...\"\n                                value={this.state.searchQuery}\n                                onChange={this.updateSearchQuery} />\n                            {\n                                (this.state.searchQuery && (!this.state.selectedAdminUsername || this.state.searchFocused)) ?\n                                    (\n                                        <Table className=\"mx-3 w-auto\">\n                                            <thead>\n                                                <tr>\n                                                    <th>Users</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    Array.from(Object.entries(userMap))\n                                                        .filter(([_, user]) =>\n                                                            user.username.toLowerCase().includes(this.state.searchQuery.toLowerCase()) && !playlist.admins.includes(user.username)) \n                                                        .map(([_, user]) => (\n                                                            <tr className=\"dropdown-item\"\n                                                                role=\"button\"\n                                                                style={{ display: \"table-row\" }}\n                                                                onClick={() => { this.setState({ selectedAdminUsername: user.username, searchFocused: false }); console.log(user.username) }}\n                                                            >\n                                                                <td>{user.username}</td>\n                                                            </tr>\n                                                        ))\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    )\n                                    : \"\"\n                            }\n                            {\n                                this.state.selectedAdminUsername ? userMap[this.state.selectedAdminUsername].username : \"\"\n                            }\n                            {/* <Button variant=\"secondary\" style={{ borderRadius: \"0px 5px 5px 0px\", borderLeft: \"none\" }}>Search</Button> */}\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer style={{ justifyContent: \"flex-end\" }}>\n                        <Button variant=\"secondary\" onClick={() => { this.setState({ searchQuery: \"\", searchFocused: false, selectedAdminUsername: \"\", showHide: false }) }}>\n                            Close this window\n                        </Button>\n                        {\n                            this.state.selectedAdminUsername ? (\n                                <Button variant=\"primary\" onClick={() => {\n                                    playlistMap[playlist.id].admins.push(userMap[this.state.selectedAdminUsername].username);\n                                    this.setState({searchQuery: \"\", searchFocused: false, selectedAdminUsername: \"\", showHide: false});\n                                }}>\n                                    Add Administrator\n                                </Button>\n                            ) : \"\"\n                        }\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        )\n    }\n}\n","import React, { ChangeEvent } from 'react';\nimport {Button, Container, Modal} from 'react-bootstrap';\nimport {HashRouter as Router, Route} from 'react-router-dom'\nimport CustomNavbar from './common/components/CustomNavbar';\n\nimport Homepage from './pages/homepage';\nimport PlaylistPage from './pages/playlist';\n\nimport './common/css/typography.css';\nimport RequestsPage from \"./pages/requests\";\nimport UserProfile from './pages/userprofilepage';\nimport ManageAdmin from './pages/manageadministrators';\n\nimport { User } from './common/types';\nimport { Form } from 'react-bootstrap';\nimport { userMap } from './common/data';\n\n\ninterface State {\n    showHide: boolean;\n    loggedInUser: User | null;\n    inputUsername: string;\n    inputPassword: string;\n    loginCallback?: () => void;\n    error: \"username\" | \"password\" | \"not-filled\" | \"\";\n}\n\nclass PLAYLISTS_APP extends React.Component<{}, State> {\n\n    constructor(props: {}) {\n        super(props);\n\n        this.state = {\n            showHide: false,\n            loggedInUser: null,\n            inputUsername: \"\",\n            inputPassword: \"\",\n            error: \"\"\n        }\n\n        this.handleModalShowHide = this.handleModalShowHide.bind(this);\n        this.handleLoginSubmission = this.handleLoginSubmission.bind(this);\n    }\n\n    handleModalShowHide(callback?: () => void): () => void {\n        return () => {\n            this.setState(prevState => ({ showHide: !prevState.showHide, loginCallback: callback }));\n        };\n    }\n\n    handleLoginInput(type: 'username' | 'password'): (event: ChangeEvent<HTMLInputElement>) => void {\n        if (type === \"username\") {\n            return (event: ChangeEvent<HTMLInputElement>) => {\n                this.setState({inputUsername: event.target.value, error: \"\"})\n            }\n        } else {\n            return (event: ChangeEvent<HTMLInputElement>) => {\n                this.setState({inputPassword: event.target.value, error: \"\"})\n            }\n        }\n    }\n\n    handleLoginSubmission(): void {\n        if (this.state.inputUsername && this.state.inputPassword) {\n            if (this.state.inputPassword.toLowerCase() === \"password\" && this.state.inputUsername.toLowerCase() === \"hci2021\") {\n                if (this.state.loginCallback !== undefined) {\n                    this.state.loginCallback();\n                }\n                this.setState({\n                    loggedInUser: userMap['hci2021'],\n                    showHide: false,\n                    inputPassword: \"\",\n                    inputUsername: \"\",\n                    loginCallback: undefined\n                });\n            } else {\n                if (this.state.inputUsername.toLowerCase() !== \"hci2021\") {\n                    this.setState({\n                        inputPassword: \"\",\n                        inputUsername: \"\",\n                        error: \"username\"\n                    })\n                } else {\n                    this.setState({\n                        inputPassword: \"\",\n                        error: \"password\"\n                    })\n                }\n            }\n        } else {\n            this.setState({\n                error: \"not-filled\"\n            })\n        }\n    }\n\n    render() {\n\n        let { loggedInUser } = this.state;\n\n        return (\n            <div>\n                <CustomNavbar user={loggedInUser} toggleLoginModal={this.handleModalShowHide}/>\n                <Container fluid>\n                    <Router>\n                        <Route path=\"/\" component={Homepage} exact/>\n\n                        {/* In order to access this playlist ID from the pages that need it, you need to use props.match.params.<VARIABLE_NAME> in that component */}\n\n                        {/*@ts-ignore */}\n                        <Route path=\"/playlist/:playlistId\" component={({ match }) =>\n                                   <PlaylistPage loggedInUsername={loggedInUser ? loggedInUser.username : undefined} match={match} toggleLoginModal={this.handleModalShowHide} />\n                               }\n                               exact\n                        />\n                        {/*@ts-ignore */}\n                        <Route path=\"/playlist/:playlistId/requests\" component={({ match, location, history }) =>\n                                   <RequestsPage loggedInUsername={loggedInUser ? loggedInUser.username : undefined}\n                                                 match={match}\n                                                 location={location}\n                                                 history={history}\n                                                 toggleLoginModal={this.handleModalShowHide} />\n                               }\n                               exact\n                        />\n\n                        {/* Route to User profile page */}\n                        <Route path=\"/user/:username\" component={UserProfile} exact/>\n\n                        {/* Route to Manage admins page */}\n                        <Route path=\"/playlist/:playlistId/admins\" component={ManageAdmin} exact/>\n                    </Router>\n\n                    <Modal show={this.state.showHide} animation={false} backdrop=\"static\" dialogClassName=\"museo-300\">\n                    <Modal.Header onClick={() => this.handleModalShowHide()}>\n                        <Modal.Title className=\"museo-display-black\">Log into your account</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <Form.Group controlId=\"formUsername\">\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter username...\" value={this.state.inputUsername} onChange={this.handleLoginInput('username')} isInvalid={this.state.error === \"username\"} />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Username not found, please try again.\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group controlId=\"formPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Enter password...\" value={this.state.inputPassword} onChange={this.handleLoginInput('password')} isInvalid={this.state.error === \"password\"} />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Incorrect password, please try again.\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            {\n                                (this.state.error === \"not-filled\") \n                                    && \n                                <p className=\"text-danger\" style={{fontSize: \"80%\", marginBottom: 0}}>\n                                    Please fill out all login fields.\n                                </p>\n                            }\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer style={{justifyContent: \"flex-end\"}}>\n                        <Button variant=\"primary\" onClick={this.handleLoginSubmission}>\n                            Log in\n                        </Button>\n                        <Button variant=\"outline-danger\" onClick={() => {this.setState({inputPassword: \"\", inputUsername: \"\", showHide: false, loginCallback: undefined})}}>\n                            Close this window\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default PLAYLISTS_APP;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './PLAYLISTS_APP';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}