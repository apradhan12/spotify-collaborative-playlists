{"version":3,"sources":["common/data/index.tsx","common/components/PlaylistSearchBar.tsx","common/components/CustomNavbar.tsx","pages/homepage/index.tsx","common/utils.ts","pages/playlist/index.tsx","pages/requests/index.tsx","pages/userprofilepage/index.tsx","pages/manageadministrators/index.tsx","PLAYLISTS_APP.tsx","reportWebVitals.ts","index.tsx"],"names":["userMap","aaron1200","username","displayName","profilePictureURL","playlistIds","followers","following","joeiscool","michelle1721","noah2111","hci2021","songMap","id","title","artist","album","duration","playlistMap","abc","pictureURL","description","songIds","creator","admins","addRequests","song","usersVoted","removeRequests","def","PlaylistSearchBar","props","state","searchQuery","searchFocused","updateSearchQuery","bind","event","this","setState","target","value","Form","className","style","width","onFocus","FormControl","autoFocus","borderColor","dark","placeholder","onChange","Table","position","backgroundColor","marginTop","zIndex","border","borderRadius","Array","from","Object","entries","filter","toLowerCase","includes","map","playlist","role","display","onClick","window","location","href","Component","CustomNavbar","Navbar","variant","Brand","Nav","user","Text","Link","Image","fluid","src","process","maxWidth","marginLeft","Button","reload","toggleLoginModal","React","Homepage","Container","Row","Col","height","secondsToMinutesString","seconds","Math","floor","toString","padStart","PlaylistPage","nums","history","useHistory","match","params","playlistId","songs","addRequestCallback","push","pathname","showAddSong","removeRequestCallback","showRemoveSong","xs","alt","to","length","reduce","a","b","loggedInUsername","undefined","striped","bordered","hover","i","RequestsTable","requests","request","adminPermissions","handleAcceptRequest","REMOVE_REQUEST_TH_LABELS","RequestsPage","addSearchQuery","selectedAddSongId","addSearchFocused","removeSongIds","toggleAddSong","toggleRemoveSong","handleAcceptAddRequest","handleAcceptRemoveRequest","prevState","songId","requestId","concat","forceUpdate","replace","Modal","show","animation","dialogClassName","backdrop","Header","Title","Body","Footer","justifyContent","label","colWidth","colSpan","keys","forEach","element","UserProfile","playlists","ManageAdmin","showHide","selectedAdminUsername","handleModalShowHide","adminName","console","log","PLAYLISTS_APP","loggedInUser","inputUsername","inputPassword","handleLoginSubmission","callback","loginCallback","type","path","component","exact","Group","controlId","Label","Control","handleLoginInput","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da541ea5.chunk.js","sourcesContent":["import {Playlist, Song, User} from \"../types\";\r\n\r\nexport interface PlaylistMap {\r\n    [key: string]: Playlist;\r\n}\r\n\r\ninterface UserMap {\r\n    [key: string]: User;\r\n}\r\n\r\nexport const userMap: UserMap = {\r\n    aaron1200: {\r\n        username: \"aaron1200\",\r\n        displayName: \"Aaron Pradhan\",\r\n        profilePictureURL: \"/aaron1200.jpg\",\r\n        playlistIds: [\"abc\"],\r\n        followers: 20,\r\n        following: 31\r\n    },\r\n    joeiscool: {\r\n        username: \"joeiscool\",\r\n        displayName: \"Joe Adams\",\r\n        profilePictureURL: \"/album.jpg\",\r\n        playlistIds: [],\r\n        followers: 39,\r\n        following: 13\r\n    },\r\n    michelle1721: {\r\n        username: \"michelle1721\",\r\n        displayName: \"Michelle Thompson\",\r\n        profilePictureURL: \"/dan1.jpg\",\r\n        playlistIds: [],\r\n        followers: 1203,\r\n        following: 101\r\n    },\r\n    noah2111: {\r\n        username: \"noah2111\",\r\n        displayName: \"Noah Smith\",\r\n        profilePictureURL: \"/drh1.jpg\",\r\n        playlistIds: [],\r\n        followers: 12,\r\n        following: 11\r\n    },\r\n    hci2021: {\r\n        username: \"hci2021\",\r\n        displayName: \"HCI Testing Account\",\r\n        profilePictureURL: \"/chw.jpg\",\r\n        playlistIds: [],\r\n        followers: 12,\r\n        following: 42\r\n    }\r\n}\r\n\r\ninterface SongMap {\r\n    [key: string]: Song;\r\n}\r\n\r\nexport const songMap: SongMap = {\r\n    \"123\": {\r\n        id: \"123\",\r\n        title: \"(Don't Fear) The Reaper\",\r\n        artist: \"Blue Öyster Cult\",\r\n        album: \"Agents of Fortune\",\r\n        duration: 308\r\n    },\r\n    \"456\": {\r\n        id: \"456\",\r\n        title: \"Don't Stop Me Now\",\r\n        artist: \"Queen\",\r\n        album: \"Jazz\",\r\n        duration: 209\r\n    },\r\n    \"s1\": {\r\n        id: \"s1\",\r\n        title: \"Get Back\",\r\n        artist: \"The Beatles\",\r\n        album: \"Let It Be\",\r\n        duration: 187\r\n    },\r\n    \"s2\": {\r\n        id: \"s2\",\r\n        title: \"Revolution\",\r\n        artist: \"The Beatles\",\r\n        album: \"The Beatles 1967 - 1970\",\r\n        duration: 205\r\n    },\r\n    \"s3\" : {\r\n        id: \"s3\",\r\n        title: \"Bangarang\",\r\n        artist: \"Skrillex\",\r\n        album: \"Bang!\",\r\n        duration: 181\r\n    },\r\n    \"s4\" : {\r\n        id: \"s4\",\r\n        title: \"Hero\",\r\n        artist: \"Pegboard Nerds\",\r\n        album: \"Hero\",\r\n        duration: 222\r\n    },\r\n    \"s5\" : {\r\n        id: \"s5\",\r\n        title: \"Life in Grey\",\r\n        artist: \"Point Point\",\r\n        album: \"Contrastive Focus Reduplication\",\r\n        duration: 224\r\n    },\r\n    \"s6\" : {\r\n        id: \"s6\",\r\n        title: \"Let it Be\",\r\n        artist: \"The Beatles\",\r\n        album: \"Let it Be\",\r\n        duration: 243\r\n    },\r\n    \"s7\" : {\r\n        id: \"s7\",\r\n        title: \"Baby\",\r\n        artist: \"Justin Bieber\",\r\n        album: \"My World 2.0\",\r\n        duration: 215\r\n    }\r\n}\r\n\r\nexport const playlistMap: PlaylistMap = {\r\n    abc: {\r\n        id: \"abc\",\r\n        title: \"60s/70s Rock\",\r\n        pictureURL: \"/album.jpg\",\r\n        description: \"Best rock songs of the 1960s and 1970s\",\r\n        songIds: [\"123\", \"456\", \"s7\"],\r\n        creator: \"aaron1200\",\r\n        admins: [\"joeiscool\", \"michelle1721\"],\r\n        addRequests: [\r\n            {\r\n                id: \"r1\",\r\n                song: songMap[\"s1\"],\r\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\", \"bigdolphin\"]\r\n            },\r\n            {\r\n                id: \"r2\",\r\n                song: songMap[\"s2\"],\r\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\"]\r\n            }\r\n        ],\r\n        removeRequests: [\r\n            {\r\n                id: \"r1\",\r\n                song: songMap[\"456\"],\r\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\"]\r\n            }\r\n        ]\r\n    },\r\n    def: {\r\n        id: \"def\",\r\n        title: \"Hype EDM\",\r\n        pictureURL: \"/bike.jpg\",\r\n        description: \"Big bass drops and crazy synths\",\r\n        songIds: [\"s3\"],\r\n        creator: \"hci2021\",\r\n        admins: [\"joeiscool\", \"michelle1721\"],\r\n        addRequests: [\r\n            {\r\n                id: \"r1\",\r\n                song: songMap[\"s4\"],\r\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\", \"bigdolphin\"]\r\n            },\r\n            {\r\n                id: \"r2\",\r\n                song: songMap[\"s5\"],\r\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\"]\r\n            }\r\n        ],\r\n        removeRequests: []\r\n    }\r\n}\r\n","import React, { ChangeEvent, Component } from 'react'\r\nimport { Form, FormControl, Table } from 'react-bootstrap';\r\nimport { playlistMap } from '../data';\r\n\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  dark?: boolean; \r\n}\r\n\r\ninterface State {\r\n  searchQuery: string;\r\n  searchFocused: boolean;\r\n}\r\n\r\nexport default class PlaylistSearchBar extends Component<Props, State>  {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchQuery: \"\",\r\n      searchFocused: false\r\n    }\r\n\r\n    this.updateSearchQuery = this.updateSearchQuery.bind(this);\r\n  }\r\n\r\n  updateSearchQuery(event: ChangeEvent<HTMLInputElement>) {\r\n    this.setState({\r\n        searchQuery: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form className=\"d-flex mx-3\" style={{width: \"305px\"}} onFocus={() => {this.setState({})}}>\r\n        <FormControl\r\n                autoFocus\r\n                style={{borderColor: this.props.dark ? \"black\" : \"white\"}}\r\n                placeholder={this.props.placeholder}\r\n                value={this.state.searchQuery}\r\n                onChange={this.updateSearchQuery}\r\n            />\r\n            {\r\n                this.state.searchQuery ?\r\n                    (\r\n                        <Table className=\"w-auto\" style={{position: \"fixed\", backgroundColor: \"white\", marginTop: \"35px\", zIndex: 1000, border: \"lightgray 2px solid\", borderRadius: \"0px 0px 5px 5px\"}}>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Title</th>\r\n                                <th>Creator</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                Array.from(Object.entries(playlistMap))\r\n                                    .filter(([_, playlist]) =>\r\n                                        playlist.title.toLowerCase().includes(this.state.searchQuery.toLowerCase()))\r\n                                    .map(([_, playlist]) => (\r\n                                        <tr className=\"dropdown-item\"\r\n                                            role=\"button\"\r\n                                            style={{display: \"table-row\"}}\r\n                                            onClick={() => { \r\n                                              window.location.href = `#/playlist/${playlist.id}`\r\n                                              this.setState({searchFocused: false, searchQuery: \"\"}); \r\n                                            }}\r\n                                            key={playlist.id}\r\n                                        >\r\n                                            <td>{playlist.title}</td>\r\n                                            <td>{playlist.creator}</td>\r\n                                        </tr>\r\n                                    ))\r\n                            }\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                    : \"\"\r\n            }\r\n    </Form>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {Navbar, Button, Nav, Image} from 'react-bootstrap'\r\nimport {User} from '../types'\r\nimport PlaylistSearchBar from './PlaylistSearchBar'\r\n\r\ninterface CustomNavbarProps {\r\n    user: User | null;\r\n    toggleLoginModal: (callback?: () => void) => () => void;\r\n}\r\n\r\nexport default class CustomNavbar extends React.Component<CustomNavbarProps> {\r\n    render() {\r\n        return (\r\n            <Navbar style={{backgroundColor: \"#6eaedd\"}} variant=\"dark\" className=\"museo-300\">\r\n                <Navbar.Brand href=\"#\">\r\n                    <p className=\"museo-display-black m-0\">Spotify Collaborative Playlists</p>\r\n                </Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <PlaylistSearchBar placeholder=\"Search for playlists...\"/>\r\n                    {/*<Nav.Link href=\"#playlist/abc/requests\">*/}\r\n                    {/*    Requests*/}\r\n                    {/*</Nav.Link>*/}\r\n                    {/*<Nav.Link href=\"#playlist/abc\">*/}\r\n                    {/*    Playlist*/}\r\n                    {/*</Nav.Link>*/}\r\n                    {/*<Nav.Link href=\"#user/aaron1200\">*/}\r\n                    {/*    User*/}\r\n                    {/*</Nav.Link>*/}\r\n                    {/*<Nav.Link href=\"#playlist/abc/admins\">*/}\r\n                    {/*    Admin*/}\r\n                    {/*</Nav.Link>*/}\r\n                </Nav>\r\n                {\r\n                    this.props.user ?\r\n                        <>\r\n                            <Navbar.Text>\r\n                                Logged in as\r\n                                <Nav.Link className=\"d-inline p-0 ml-2\" href={`#/user/${this.props.user.username}`}>\r\n                                <span>\r\n                                    {this.props.user.displayName}\r\n                                    <Image fluid src={process.env.PUBLIC_URL + this.props.user.profilePictureURL}\r\n                                           style={{maxWidth: \"30px\", marginLeft: \"5px\"}}/>\r\n                                </span>\r\n                                </Nav.Link>\r\n                            </Navbar.Text>\r\n                            <Button variant=\"light\" className=\"ml-5\" onClick={() => window.location.reload()}>Log out</Button>\r\n                        </> :\r\n                        <Button variant=\"light\" onClick={this.props.toggleLoginModal()}>\r\n                            Log in\r\n                        </Button>\r\n                }\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport PlaylistSearchBar from '../../common/components/PlaylistSearchBar';\r\n\r\nclass Homepage extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container className=\"museo-300\">\r\n                <Row>\r\n                    <Col className=\"text-left d-flex flex-column justify-content-center align-items-center\" style={{height: \"92vh\"}}>\r\n                   \r\n                            <h1 className=\"museo-display-black\">\r\n                                Spotify Collaborative Playlists\r\n                            </h1>\r\n                            <PlaylistSearchBar placeholder=\"Search for playlists...\" dark={true}/>\r\n                    \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;","const SECONDS_PER_MINUTE = 60;\r\nconst MINUTES_PER_HOUR = 60;\r\n\r\nexport function secondsToMinutesString(seconds: number) {\r\n    return `${Math.floor(seconds / SECONDS_PER_MINUTE)}:${(seconds % SECONDS_PER_MINUTE).toString().padStart(2, \"0\")}`;\r\n}\r\n\r\nexport function secondsToHoursString(seconds: number) {\r\n    return `${Math.floor(seconds / (SECONDS_PER_MINUTE * MINUTES_PER_HOUR))} hr ${(Math.floor(seconds % (SECONDS_PER_MINUTE * MINUTES_PER_HOUR) / SECONDS_PER_MINUTE))} min`;\r\n}\r\n\r\nexport function sum(nums: number[]) {\r\n    return nums.reduce((a, b) => a + b, 0)\r\n}\r\n","import React from 'react';\r\nimport {Button, Col, Container, Row, Table, Image} from \"react-bootstrap\";\r\nimport {playlistMap, songMap, userMap} from \"../../common/data\";\r\nimport {secondsToHoursString, secondsToMinutesString, sum} from \"../../common/utils\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useHistory} from \"react-router\";\r\n\r\ninterface Props {\r\n    match: {\r\n        params: {\r\n            playlistId: string;\r\n        }\r\n    },\r\n    loggedInUsername?: string;\r\n    toggleLoginModal: (callback?: () => void) => () => void;\r\n}\r\n\r\nexport default function PlaylistPage(props: Props) {\r\n    const history = useHistory();\r\n\r\n    const playlist = playlistMap[props.match.params.playlistId];\r\n    const creator = userMap[playlist.creator];\r\n    const songs = playlist.songIds.map(id => songMap[id]);\r\n\r\n    const addRequestCallback = () => history.push({\r\n        pathname: `/playlist/${playlist.id}/requests`,\r\n        state: {showAddSong: true}\r\n    });\r\n\r\n    const removeRequestCallback = () => history.push({\r\n        pathname: `/playlist/${playlist.id}/requests`,\r\n        state: {showRemoveSong: true}\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"my-4\">\r\n                <Col xs={4}>\r\n                    <Image src={process.env.PUBLIC_URL + playlist.pictureURL} alt=\"Album cover\" fluid/>\r\n                </Col>\r\n                <Col xs={4}>\r\n                    <p className=\"museo-display-light m-0\">Playlist</p>\r\n                    <h1 className=\"museo-display-black\">{playlist.title}</h1>\r\n                    <p className=\"museo-300\">Created by <Link to={`/user/${creator.username}`}>{creator.displayName}</Link> &bull; {songs.length} songs, {secondsToHoursString(sum(songs.map(song => song.duration)))}</p>\r\n                    <Button variant=\"outline-secondary\" className=\"museo-300\">Share</Button>\r\n                </Col>\r\n                <Col xs={4} className=\"text-right\">\r\n                    { (creator.username !== props.loggedInUsername) && (\r\n                        <div>\r\n                            <Button variant=\"outline-primary\" className=\"museo-300 mb-2\"\r\n                                    onClick={props.loggedInUsername === undefined ? props.toggleLoginModal(addRequestCallback) : addRequestCallback}>\r\n                                Request to add a song\r\n                            </Button>\r\n                            <br />\r\n                            <Button variant=\"outline-danger\" className=\"museo-300 mb-2\"\r\n                                    onClick={props.loggedInUsername === undefined ? props.toggleLoginModal(removeRequestCallback) : removeRequestCallback}>\r\n                                Request to remove a song\r\n                            </Button>\r\n                            <Link to={`/playlist/${playlist.id}/requests`}>\r\n                                <Button variant=\"outline-secondary\" className=\"museo-300 mb-2\">View song requests</Button><br />\r\n                            </Link>\r\n                            <p className=\"museo-300 mb-2\">If you're an admin of this playlist, log in to manage song requests.</p>\r\n                        </div>\r\n                    )}\r\n                    { (creator.username === props.loggedInUsername) && (\r\n                        <div>\r\n                            <Link to={`/playlist/${playlist.id}/requests`}>\r\n                                <Button variant=\"primary\" className=\"museo-300 mb-2\">Manage Song Requests</Button><br />\r\n                            </Link>\r\n                            <Link to={`/playlist/${playlist.id}/admins`}>\r\n                                <Button variant=\"outline-secondary\" className=\"museo-300 mb-2\">Manage Administrators</Button><br />\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Table striped bordered hover className=\"museo-300\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Title</th>\r\n                            <th>Artist</th>\r\n                            <th>Album</th>\r\n                            <th>Date Added</th>\r\n                            <th>Duration</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            Array.from(songs.entries()).map(([i, song]) => (\r\n                                <tr key={song.id}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td>{song.title}</td>\r\n                                    <td>{song.artist}</td>\r\n                                    <td>{song.album}</td>\r\n                                    <td>2021-03-30</td>\r\n                                    <td>{secondsToMinutesString(song.duration)}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button, Col, Container, Form, FormControl, Modal, Row, Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { playlistMap, songMap, userMap } from \"../../common/data\";\r\nimport { secondsToMinutesString } from \"../../common/utils\";\r\nimport { SongRequest } from \"../../common/types\";\r\nimport \"./style.css\";\r\nimport { ChangeEvent } from 'react';\r\nimport { Playlist } from '../../common/types';\r\n\r\ninterface RequestsTableProps {\r\n    requests: SongRequest[];\r\n    adminPermissions: boolean;\r\n    handleAcceptRequest: (songId: string, requestId: string) => () => void;\r\n}\r\n\r\nclass RequestsTable extends Component<RequestsTableProps> {\r\n    render() {\r\n        return (\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"customHeader-1\">#</th>\r\n                        <th className=\"customHeader-2\">Title</th>\r\n                        <th className=\"customHeader-2\">Artist</th>\r\n                        <th className=\"customHeader-2\">Album</th>\r\n                        <th className=\"customHeader-1\">Date Added</th>\r\n                        <th className=\"customHeader-1\">Duration</th>\r\n                        <th className=\"customHeader-1\">Votes</th>\r\n                        <th className=\"customHeader-2\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        Array.from(this.props.requests.entries()).map(([i, request]) => (\r\n                            <tr key={request.id}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{request.song.title}</td>\r\n                                <td>{request.song.artist}</td>\r\n                                <td>{request.song.album}</td>\r\n                                <td>2021-03-30</td>\r\n                                <td>{secondsToMinutesString(request.song.duration)}</td>\r\n                                <td>{request.usersVoted.length}</td>\r\n                                {!this.props.adminPermissions && <td><Button variant=\"outline-secondary\">Vote for Request</Button></td>}\r\n                                {this.props.adminPermissions && <td><Button variant=\"primary\" onClick={this.props.handleAcceptRequest(request.song.id, request.id)}>Accept Request</Button></td>}\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\ninterface Props {\r\n    match: {\r\n        params: {\r\n            playlistId: string;\r\n        }\r\n    }\r\n    location: {\r\n        state?: LocationState;\r\n    },\r\n    loggedInUsername?: string;\r\n    toggleLoginModal: (callback?: () => void) => () => void;\r\n    history: any; // todo fix this\r\n}\r\n\r\ninterface State {\r\n    showAddSong: boolean;\r\n    showRemoveSong: boolean;\r\n    addSearchQuery: string;\r\n    selectedAddSongId: string;\r\n    addSearchFocused: boolean;\r\n    removeSongIds: string[];\r\n}\r\n\r\ninterface LocationState {\r\n    showAddSong?: boolean;\r\n    showRemoveSong?: boolean;\r\n}\r\n\r\nconst REMOVE_REQUEST_TH_LABELS = {\r\n    \"#\": 1,\r\n    \"Title\": 2,\r\n    \"Artist\": 2,\r\n    \"Album\": 2,\r\n    \"Date Added\": 2,\r\n    \"Duration\": 1,\r\n    \"Actions\": 2\r\n}\r\n\r\nexport default class RequestsPage extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            showAddSong: (this.props.location.state !== undefined) && (this.props.location.state.showAddSong === true),\r\n            showRemoveSong: (this.props.location.state !== undefined) && (this.props.location.state.showRemoveSong === true),\r\n            addSearchQuery: \"\",\r\n            selectedAddSongId: \"\",\r\n            addSearchFocused: false,\r\n            removeSongIds: []\r\n        }\r\n        this.toggleAddSong = this.toggleAddSong.bind(this);\r\n        this.toggleRemoveSong = this.toggleRemoveSong.bind(this);\r\n        this.updateSearchQuery = this.updateSearchQuery.bind(this);\r\n        this.handleAcceptAddRequest = this.handleAcceptAddRequest.bind(this);\r\n        this.handleAcceptRemoveRequest = this.handleAcceptRemoveRequest.bind(this);\r\n    }\r\n\r\n    toggleAddSong() {\r\n        this.setState(prevState => ({ addSearchQuery: \"\", addSearchFocused: false, selectedAddSongId: \"\", showAddSong: !prevState.showAddSong }));\r\n    }\r\n\r\n    toggleRemoveSong() {\r\n        this.setState(prevState => ({ removeSongIds: [], showRemoveSong: !prevState.showRemoveSong }));\r\n    }\r\n\r\n    updateSearchQuery(event: ChangeEvent<HTMLInputElement>) {\r\n        this.setState({\r\n            addSearchQuery: event.target.value\r\n        });\r\n    }\r\n\r\n    handleAcceptAddRequest(songId: string, requestId: string) {\r\n        return () => {\r\n            let playlist: Playlist = playlistMap[this.props.match.params.playlistId];\r\n            playlist.addRequests = playlist.addRequests.filter((request) => request.id !== requestId);\r\n            playlist.songIds = playlist.songIds.concat(songId);\r\n\r\n            playlistMap[this.props.match.params.playlistId] = playlist;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    handleAcceptRemoveRequest(songId: string, requestId: string) {\r\n        return () => {\r\n            let playlist: Playlist = playlistMap[this.props.match.params.playlistId];\r\n            playlist.addRequests = playlist.addRequests.filter((request) => request.id !== requestId);\r\n            playlist.songIds = playlist.songIds.filter((id) => id !== songId);\r\n\r\n            playlistMap[this.props.match.params.playlistId] = playlist;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const playlist = playlistMap[this.props.match.params.playlistId];\r\n        const creator = userMap[playlist.creator];\r\n        const songs = playlist.songIds.map(id => songMap[id]);\r\n\r\n        // replace instead of push because you can't push the same path\r\n        const addRequestCallback = () => this.props.history.replace({\r\n            state: {showAddSong: true}\r\n        });\r\n\r\n        const removeRequestCallback = () => this.props.history.replace({\r\n            state: {showRemoveSong: true}\r\n        });\r\n\r\n        return (\r\n            <Container className=\"museo-300\">\r\n                <Row className=\"mt-4\">\r\n                    <Col xs={12}>\r\n                        <Link to={`/playlist/${playlist.id}`}>&#8592; Go back to playlist</Link>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-4\">\r\n                    <Col xs={8}>\r\n                        <h1 className=\"museo-display-black\">Song Requests</h1>\r\n                        Playlist: <Link to={`/playlist/${playlist.id}`}>{playlist.title}</Link> by <Link to={`/user/${creator.username}`}>{creator.displayName}</Link>\r\n                    </Col>\r\n                    <Col xs={4} className=\"text-right\">\r\n                        {creator.username !== this.props.loggedInUsername && (\r\n                            <div>\r\n                                <Button variant=\"outline-primary\" className=\"museo-300 mb-2\"\r\n                                        onClick={this.props.loggedInUsername === undefined ? this.props.toggleLoginModal(addRequestCallback) : this.toggleAddSong}>\r\n                                    Request to add a song\r\n                                </Button>\r\n                                <br />\r\n                                <Button variant=\"outline-danger\" className=\"museo-300 mb-2\"\r\n                                        onClick={this.props.loggedInUsername === undefined ? this.props.toggleLoginModal(removeRequestCallback) : this.toggleRemoveSong}>\r\n                                    Request to remove a song\r\n                                </Button>\r\n                            </div>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-4\">\r\n                    <Col>\r\n                        <h2 className=\"museo-display-light\">Add Song Requests</h2>\r\n                        <RequestsTable handleAcceptRequest={this.handleAcceptAddRequest} adminPermissions={creator.username === this.props.loggedInUsername} requests={playlist.addRequests} />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-4\">\r\n                    <Col>\r\n                        <h2 className=\"museo-display-light\">Remove Song Requests</h2>\r\n                        <RequestsTable handleAcceptRequest={this.handleAcceptRemoveRequest} adminPermissions={creator.username === this.props.loggedInUsername} requests={playlist.removeRequests} />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Modal show={this.state.showAddSong} animation={false} dialogClassName=\"larger-width-modal museo-300\" backdrop=\"static\">\r\n                    <Modal.Header>\r\n                        <Modal.Title className=\"museo-display-black\">Request to add a song</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"px-3\">\r\n                        <Form\r\n                            onFocus={() => this.setState({ addSearchFocused: true })}\r\n                        >\r\n                            <FormControl\r\n                                autoFocus\r\n                                className=\"my-2 w-auto\"\r\n                                placeholder=\"Type the song title here...\"\r\n                                value={this.state.addSearchQuery}\r\n                                onChange={this.updateSearchQuery}\r\n                            />\r\n                            {\r\n                                (this.state.addSearchQuery && (!this.state.selectedAddSongId || this.state.addSearchFocused)) ?\r\n                                    (\r\n                                        <Table className=\"mx-3 w-auto\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Song</th>\r\n                                                    <th>Artist</th>\r\n                                                    <th>Album</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    Array.from(Object.entries(songMap))\r\n                                                        .filter(([_, song]) =>\r\n                                                            song.title.toLowerCase().includes(this.state.addSearchQuery.toLowerCase()))\r\n                                                        .map(([_, song]) => (\r\n                                                            <tr className=\"dropdown-item\"\r\n                                                                role=\"button\"\r\n                                                                style={{ display: \"table-row\" }}\r\n                                                                onClick={() => this.setState({ selectedAddSongId: song.id, addSearchFocused: false })}\r\n                                                                key={song.id}\r\n                                                            >\r\n                                                                <td>{song.title}</td>\r\n                                                                <td>{song.artist}</td>\r\n                                                                <td>{song.album}</td>\r\n                                                            </tr>\r\n                                                        ))\r\n                                                }\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    )\r\n                                    : \"\"\r\n                            }\r\n                            {\r\n                                this.state.selectedAddSongId ? songMap[this.state.selectedAddSongId].title : \"\"\r\n                            }\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ justifyContent: \"flex-start\" }}>\r\n                        <Button variant=\"outline-secondary\" onClick={this.toggleAddSong}>\r\n                            Close this window\r\n                        </Button>\r\n                        {\r\n                            this.state.selectedAddSongId ? (\r\n                                <Button variant=\"primary\" onClick={() => {\r\n                                    playlistMap[playlist.id].addRequests.push({id: `r${playlistMap[playlist.id].addRequests.length + 1}`, song: songMap[this.state.selectedAddSongId], usersVoted: [\"me\"]});\r\n                                    this.setState({addSearchQuery: \"\", addSearchFocused: false, selectedAddSongId: \"\", showAddSong: false});\r\n                                }}>\r\n                                    Request this song\r\n                                </Button>\r\n                            ) : \"\"\r\n                        }\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.showRemoveSong} animation={false} dialogClassName=\"larger-width-modal museo-300\" backdrop=\"static\">\r\n                    <Modal.Header>\r\n                        <Modal.Title className=\"museo-display-black\">Request to remove a song</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    {\r\n                                        Array.from(Object.entries(REMOVE_REQUEST_TH_LABELS)).map(([label, colWidth]) =>\r\n                                            <th key={label} className={\"customHeader-\" + colWidth}>{label}</th>\r\n                                        )\r\n                                    }\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    Array.from(songs.entries()).map(([i, song]) => (\r\n                                        this.state.removeSongIds.includes(song.id) ? (\r\n                                            <tr key={song.id}>\r\n                                                <td colSpan={Object.keys(REMOVE_REQUEST_TH_LABELS).length}>\r\n                                                    You requested to remove {song.title}.&nbsp;\r\n                                                <Button\r\n                                                        variant=\"outline-secondary\"\r\n                                                        onClick={() => this.setState(prevState => ({ removeSongIds: prevState.removeSongIds.filter(id => id !== song.id) }))}\r\n                                                    >\r\n                                                        Undo\r\n                                                </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ) : (\r\n                                                <tr key={song.id}>\r\n                                                    <td>{i + 1}</td>\r\n                                                    <td>{song.title}</td>\r\n                                                    <td>{song.artist}</td>\r\n                                                    <td>{song.album}</td>\r\n                                                    <td>2021-03-30</td>\r\n                                                    <td>{secondsToMinutesString(song.duration)}</td>\r\n                                                    <td><Button variant=\"outline-danger\" onClick={() => this.setState(prevState => {\r\n                                                        if (!prevState.removeSongIds.includes(song.id)) {\r\n                                                            return { removeSongIds: prevState.removeSongIds.concat(song.id) };\r\n                                                        }\r\n                                                        return { removeSongIds: prevState.removeSongIds };\r\n                                                    })}>Request to remove</Button></td>\r\n                                                </tr>\r\n                                            )\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ justifyContent: \"flex-start\" }}>\r\n                        <Button variant=\"primary\" onClick={() => {\r\n                            this.state.removeSongIds.forEach(element => {\r\n                                playlistMap[playlist.id].removeRequests.push({ id: \"s1234\", song: songMap[element], usersVoted: [\"me\"] });\r\n                            this.setState({ addSearchQuery: \"\", addSearchFocused: false, removeSongIds: [], showAddSong: false });\r\n                            this.toggleRemoveSong()\r\n                            });\r\n                            \r\n                        }}>\r\n                            Finish requesting song removals\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport { Col, Container, Row, Image, Table } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { playlistMap, userMap } from \"../../common/data\";\r\n\r\ninterface Props {\r\n    match: {\r\n        params: {\r\n            username: string;\r\n        }\r\n    }\r\n}\r\n\r\nexport default class UserProfile extends React.Component<Props> {\r\n    render() {\r\n        const user = userMap[this.props.match.params.username];\r\n        const playlists = user.playlistIds.map(id => playlistMap[id]);\r\n        return (\r\n            <Container className=\"museo-300\">\r\n                <Row className=\"my-4\">\r\n                    <Col xs={4}>\r\n                        <Image src={process.env.PUBLIC_URL + user.profilePictureURL} alt={`${user.displayName}'s profile`} fluid />\r\n                    </Col>\r\n                    <Col xs={8}>\r\n                        <h1 className=\"museo-display-black\">{user.displayName}</h1>\r\n                        <p className=\"m-0\">{user.followers} followers</p>\r\n                        <p>{playlists.length} playlists</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <h3 className=\"museo-display-light\">User Playlists</h3>\r\n                        <Table striped bordered hover className=\"museo-300\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Title</th>\r\n                                <th>Date Created</th>\r\n                                <th>Number of Songs</th>\r\n                                <th>Duration</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                Array.from(Object.entries(playlistMap))\r\n                                    .filter(([_, playlist]) => playlist.creator === user.username)\r\n                                    .map(([_, playlist]) => {\r\n                                        return (\r\n                                            <tr key={playlist.id}>\r\n                                                <td><Link to={`/playlist/${playlist.id}`}>{playlist.title}</Link></td>\r\n                                                <td>2021-03-30</td>\r\n                                                <td>{playlist.songIds.length}</td>\r\n                                                <td>9 min</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Button, Container, Row, Col, Modal, Form, FormControl, Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { playlistMap, userMap } from \"../../common/data\";\r\nimport { ChangeEvent } from 'react';\r\n\r\ninterface Props {\r\n    match: {\r\n        params: {\r\n            playlistId: string;\r\n        }\r\n    }\r\n}\r\n\r\ninterface State {\r\n    showHide: boolean;\r\n    searchQuery: string;\r\n    selectedAdminUsername: string;\r\n    searchFocused: boolean;\r\n}\r\n\r\nexport default class ManageAdmin extends React.Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            showHide: false,\r\n            searchQuery: \"\",\r\n            selectedAdminUsername: \"\",\r\n            searchFocused: false\r\n        }\r\n        this.handleModalShowHide = this.handleModalShowHide.bind(this);\r\n        this.updateSearchQuery = this.updateSearchQuery.bind(this);\r\n    }\r\n\r\n    handleModalShowHide() {\r\n        this.setState({ showHide: !this.state.showHide })\r\n    }\r\n\r\n    updateSearchQuery(event: ChangeEvent<HTMLInputElement>) {\r\n        this.setState({\r\n            searchQuery: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const playlist = playlistMap[this.props.match.params.playlistId];\r\n        const creator = userMap[playlist.creator];\r\n        return (\r\n            <Container className=\"museo-300\">\r\n                <Row className=\"my-4\">\r\n                    <Col xs={12}>\r\n                        <Link to={`/playlist/${playlist.id}`}>&#8592; Go back to playlist</Link>\r\n                        <h1 className=\"museo-display-black\">Manage Administrators</h1>\r\n                        <p>Playlist: <Link to={`/playlist/${playlist.id}`}>{playlist.title}</Link> by <Link to={`/user/${creator.username}`}>{creator.displayName}</Link></p>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-4\">\r\n                    <Col xs={12}>\r\n                        <h3 className=\"museo-display-light\">Current Administrators</h3>\r\n                        {playlist.admins.length > 0 && \r\n                            <ul>\r\n                                {playlist.admins.map((adminName) => (\r\n                                    <li key={adminName}>\r\n                                        <p className=\"m-0\">{adminName}</p>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        }\r\n                        {!(playlist.admins.length > 0) && <p>There are no admins for this playlist. Add one to help manage requests.</p>}\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-2\">\r\n                    <Col xs={12}>\r\n                        <Button variant=\"primary\" onClick={() => this.handleModalShowHide()}>Add new Administrator</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Button variant=\"danger\">Remove an Administrator</Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Modal show={this.state.showHide} backdrop=\"static\" dialogClassName=\"museo-300\">\r\n                    <Modal.Header onClick={() => this.handleModalShowHide()}>\r\n                        <Modal.Title className=\"museo-display-black\">Add new Administrator</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form onFocus={() => this.setState({ searchFocused: true })}>\r\n                            <FormControl autoFocus\r\n                                className=\"mx-3 my-2 w-auto\"\r\n                                placeholder=\"Type a username...\"\r\n                                value={this.state.searchQuery}\r\n                                onChange={this.updateSearchQuery} />\r\n                            {\r\n                                (this.state.searchQuery && (!this.state.selectedAdminUsername || this.state.searchFocused)) ?\r\n                                    (\r\n                                        <Table className=\"mx-3 w-auto\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Users</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    Array.from(Object.entries(userMap))\r\n                                                        .filter(([_, user]) =>\r\n                                                            user.username.toLowerCase().includes(this.state.searchQuery.toLowerCase()) && !playlist.admins.includes(user.username)) \r\n                                                        .map(([_, user]) => (\r\n                                                            <tr className=\"dropdown-item\"\r\n                                                                role=\"button\"\r\n                                                                style={{ display: \"table-row\" }}\r\n                                                                onClick={() => { this.setState({ selectedAdminUsername: user.username, searchFocused: false }); console.log(user.username) }}\r\n                                                            >\r\n                                                                <td>{user.username}</td>\r\n                                                            </tr>\r\n                                                        ))\r\n                                                }\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    )\r\n                                    : \"\"\r\n                            }\r\n                            {\r\n                                this.state.selectedAdminUsername ? userMap[this.state.selectedAdminUsername].username : \"\"\r\n                            }\r\n                            {/* <Button variant=\"secondary\" style={{ borderRadius: \"0px 5px 5px 0px\", borderLeft: \"none\" }}>Search</Button> */}\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ justifyContent: \"flex-start\" }}>\r\n                        <Button variant=\"secondary\" onClick={() => { this.setState({ searchQuery: \"\", searchFocused: false, selectedAdminUsername: \"\", showHide: false }) }}>\r\n                            Close this window\r\n                        </Button>\r\n                        {\r\n                            this.state.selectedAdminUsername ? (\r\n                                <Button variant=\"primary\" onClick={() => {\r\n                                    playlistMap[playlist.id].admins.push(userMap[this.state.selectedAdminUsername].username);\r\n                                    this.setState({searchQuery: \"\", searchFocused: false, selectedAdminUsername: \"\", showHide: false});\r\n                                }}>\r\n                                    Add Administrator\r\n                                </Button>\r\n                            ) : \"\"\r\n                        }\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { ChangeEvent } from 'react';\r\nimport {Button, Container, Modal} from 'react-bootstrap';\r\nimport {HashRouter as Router, Route} from 'react-router-dom'\r\nimport CustomNavbar from './common/components/CustomNavbar';\r\n\r\nimport Homepage from './pages/homepage';\r\nimport PlaylistPage from './pages/playlist';\r\n\r\nimport './common/css/typography.css';\r\nimport RequestsPage from \"./pages/requests\";\r\nimport UserProfile from './pages/userprofilepage';\r\nimport ManageAdmin from './pages/manageadministrators';\r\n\r\nimport { User } from './common/types';\r\nimport { Form } from 'react-bootstrap';\r\nimport { userMap } from './common/data';\r\n\r\n\r\ninterface State {\r\n    showHide: boolean;\r\n    loggedInUser: User | null;\r\n    inputUsername: string;\r\n    inputPassword: string;\r\n    loginCallback?: () => void;\r\n}\r\n\r\nclass PLAYLISTS_APP extends React.Component<{}, State> {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showHide: false,\r\n            loggedInUser: null,\r\n            inputUsername: \"\",\r\n            inputPassword: \"\"\r\n        }\r\n\r\n        this.handleModalShowHide = this.handleModalShowHide.bind(this);\r\n        this.handleLoginSubmission = this.handleLoginSubmission.bind(this);\r\n    }\r\n\r\n    handleModalShowHide(callback?: () => void): () => void {\r\n        return () => {\r\n            this.setState(prevState => ({ showHide: !prevState.showHide, loginCallback: callback }));\r\n        };\r\n    }\r\n\r\n    handleLoginInput(type: 'username' | 'password'): (event: ChangeEvent<HTMLInputElement>) => void {\r\n        if (type === \"username\") {\r\n            return (event: ChangeEvent<HTMLInputElement>) => {\r\n                this.setState({inputUsername: event.target.value})\r\n            }\r\n        } else {\r\n            return (event: ChangeEvent<HTMLInputElement>) => {\r\n                this.setState({inputPassword: event.target.value})\r\n            }\r\n        }\r\n    }\r\n\r\n    handleLoginSubmission(): void {\r\n        if (this.state.inputUsername && this.state.inputPassword) {\r\n            if (this.state.inputPassword.toLowerCase() === \"password\" && this.state.inputUsername.toLowerCase() === \"hci2021\") {\r\n                if (this.state.loginCallback !== undefined) {\r\n                    this.state.loginCallback();\r\n                }\r\n                this.setState({\r\n                    loggedInUser: userMap['hci2021'],\r\n                    showHide: false,\r\n                    inputPassword: \"\",\r\n                    inputUsername: \"\",\r\n                    loginCallback: undefined\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let { loggedInUser } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <CustomNavbar user={loggedInUser} toggleLoginModal={this.handleModalShowHide}/>\r\n                <Container fluid>\r\n                    <Router>\r\n                        <Route path=\"/\" component={Homepage} exact/>\r\n\r\n                        {/* In order to access this playlist ID from the pages that need it, you need to use props.match.params.<VARIABLE_NAME> in that component */}\r\n\r\n                        {/*@ts-ignore */}\r\n                        <Route path=\"/playlist/:playlistId\" component={({ match }) =>\r\n                                   <PlaylistPage loggedInUsername={loggedInUser ? loggedInUser.username : undefined} match={match} toggleLoginModal={this.handleModalShowHide} />\r\n                               }\r\n                               exact\r\n                        />\r\n                        {/*@ts-ignore */}\r\n                        <Route path=\"/playlist/:playlistId/requests\" component={({ match, location, history }) =>\r\n                                   <RequestsPage loggedInUsername={loggedInUser ? loggedInUser.username : undefined}\r\n                                                 match={match}\r\n                                                 location={location}\r\n                                                 history={history}\r\n                                                 toggleLoginModal={this.handleModalShowHide} />\r\n                               }\r\n                               exact\r\n                        />\r\n\r\n                        {/* Route to User profile page */}\r\n                        <Route path=\"/user/:username\" component={UserProfile} exact/>\r\n\r\n                        {/* Route to Manage admins page */}\r\n                        <Route path=\"/playlist/:playlistId/admins\" component={ManageAdmin} exact/>\r\n                    </Router>\r\n\r\n                    <Modal show={this.state.showHide} animation={false} backdrop=\"static\">\r\n                    <Modal.Header onClick={() => this.handleModalShowHide()}>\r\n                        <Modal.Title>Log into your account</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formUsername\">\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter username...\" value={this.state.inputUsername} onChange={this.handleLoginInput('username')} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Enter password...\" value={this.state.inputPassword} onChange={this.handleLoginInput('password')} />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{justifyContent: \"flex-start\"}}>\r\n                        <Button variant=\"primary\" onClick={this.handleLoginSubmission}>\r\n                            Log in\r\n                        </Button>\r\n                        <Button variant=\"outline-danger\" onClick={() => {this.setState({inputPassword: \"\", inputUsername: \"\", showHide: false, loginCallback: undefined})}}>\r\n                            Close this window\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PLAYLISTS_APP;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './PLAYLISTS_APP';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}