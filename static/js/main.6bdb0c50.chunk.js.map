{"version":3,"sources":["common/data/index.tsx","common/components/PlaylistSearchBar.tsx","common/components/CustomNavbar.tsx","pages/homepage/index.tsx","common/utils.ts","pages/playlist/index.tsx","pages/requests/index.tsx","pages/userprofilepage/index.tsx","pages/manageadministrators/index.tsx","PLAYLISTS_APP.tsx","reportWebVitals.ts","index.tsx"],"names":["userMap","aaron1200","username","displayName","profilePictureURL","playlistIds","followers","following","joeiscool","michelle1721","noah2111","hci2021","songMap","id","title","artist","album","duration","playlistMap","abc","pictureURL","description","songIds","creator","admins","addRequests","song","usersVoted","removeRequests","def","classical","jazz","PlaylistSearchBar","props","state","searchQuery","searchFocused","updateSearchQuery","bind","event","this","setState","target","value","results","Array","from","Object","entries","filter","toLowerCase","includes","Form","className","style","width","onFocus","FormControl","autoFocus","borderColor","dark","placeholder","onChange","Table","position","backgroundColor","marginTop","zIndex","border","borderRadius","length","color","map","playlist","role","display","onClick","window","location","href","Component","CustomNavbar","hash","addEventListener","Navbar","variant","Brand","Nav","user","Text","Link","textDecorationLine","Image","fluid","src","process","maxWidth","marginLeft","Button","reload","toggleLoginModal","React","Homepage","Container","Row","Col","height","xs","slice","padding","to","boxShadow","secondsToMinutesString","seconds","Math","floor","toString","padStart","PlaylistPage","nums","history","useHistory","match","params","playlistId","songs","addRequestCallback","push","pathname","showAddSong","removeRequestCallback","showRemoveSong","alt","reduce","a","b","link","navigator","clipboard","writeText","then","alert","loggedInUsername","undefined","striped","bordered","hover","i","RequestsTable","requests","request","adminPermissions","handleAcceptRequest","removeVote","addVote","REMOVE_REQUEST_TH_LABELS","RequestsPage","addSearchQuery","selectedAddSongId","addSearchFocused","removeSongIds","recentAddSongRequest","recentRemoveSongRequest","toggleAddSong","toggleRemoveSong","handleAcceptAddRequest","handleAcceptRemoveRequest","prevState","isAddRequest","requestId","find","forceUpdate","songId","concat","replace","Alert","show","Modal","animation","dialogClassName","backdrop","Header","Title","Body","Footer","justifyContent","setTimeout","label","colWidth","colSpan","keys","forEach","element","UserProfile","playlists","ManageAdmin","showHide","selectedAdminUsername","handleModalShowHide","adminName","console","log","PLAYLISTS_APP","loggedInUser","inputUsername","inputPassword","error","handleLoginSubmission","callback","loginCallback","type","path","component","exact","Group","controlId","Label","Control","handleLoginInput","isInvalid","Feedback","fontSize","marginBottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bdb0c50.chunk.js","sourcesContent":["import {Playlist, Song, User} from \"../types\";\r\n\r\nexport interface PlaylistMap {\r\n    [key: string]: Playlist;\r\n}\r\n\r\ninterface UserMap {\r\n    [key: string]: User;\r\n}\r\n\r\nexport const userMap: UserMap = {\r\n    aaron1200: {\r\n        username: \"aaron1200\",\r\n        displayName: \"Aaron Pradhan\",\r\n        profilePictureURL: \"/aaron1200.jpg\",\r\n        playlistIds: [\"abc\"],\r\n        followers: 20,\r\n        following: 31\r\n    },\r\n    joeiscool: {\r\n        username: \"joeiscool\",\r\n        displayName: \"Joe Adams\",\r\n        profilePictureURL: \"/joe.jpg\",\r\n        playlistIds: [],\r\n        followers: 39,\r\n        following: 13\r\n    },\r\n    michelle1721: {\r\n        username: \"michelle1721\",\r\n        displayName: \"Michelle Thompson\",\r\n        profilePictureURL: \"/michelle.jpg\",\r\n        playlistIds: [],\r\n        followers: 1203,\r\n        following: 101\r\n    },\r\n    noah2111: {\r\n        username: \"noah2111\",\r\n        displayName: \"Noah Smith\",\r\n        profilePictureURL: \"/noah.jpg\",\r\n        playlistIds: [],\r\n        followers: 12,\r\n        following: 11\r\n    },\r\n    hci2021: {\r\n        username: \"hci2021\",\r\n        displayName: \"HCI Testing Account\",\r\n        profilePictureURL: \"/hci.jpg\",\r\n        playlistIds: [],\r\n        followers: 12,\r\n        following: 42\r\n    }\r\n}\r\n\r\ninterface SongMap {\r\n    [key: string]: Song;\r\n}\r\n\r\nexport const songMap: SongMap = {\r\n    \"123\": {\r\n        id: \"123\",\r\n        title: \"(Don't Fear) The Reaper\",\r\n        artist: \"Blue Öyster Cult\",\r\n        album: \"Agents of Fortune\",\r\n        duration: 308\r\n    },\r\n    \"456\": {\r\n        id: \"456\",\r\n        title: \"Don't Stop Me Now\",\r\n        artist: \"Queen\",\r\n        album: \"Jazz\",\r\n        duration: 209\r\n    },\r\n    \"s1\": {\r\n        id: \"s1\",\r\n        title: \"Get Back\",\r\n        artist: \"The Beatles\",\r\n        album: \"Let It Be\",\r\n        duration: 187\r\n    },\r\n    \"s2\": {\r\n        id: \"s2\",\r\n        title: \"Revolution\",\r\n        artist: \"The Beatles\",\r\n        album: \"The Beatles 1967 - 1970\",\r\n        duration: 205\r\n    },\r\n    \"s3\" : {\r\n        id: \"s3\",\r\n        title: \"Bangarang\",\r\n        artist: \"Skrillex\",\r\n        album: \"Bang!\",\r\n        duration: 181\r\n    },\r\n    \"s4\" : {\r\n        id: \"s4\",\r\n        title: \"Hero\",\r\n        artist: \"Pegboard Nerds\",\r\n        album: \"Hero\",\r\n        duration: 222\r\n    },\r\n    \"s5\" : {\r\n        id: \"s5\",\r\n        title: \"Life in Grey\",\r\n        artist: \"Point Point\",\r\n        album: \"Contrastive Focus Reduplication\",\r\n        duration: 224\r\n    },\r\n    \"s6\" : {\r\n        id: \"s6\",\r\n        title: \"Let it Be\",\r\n        artist: \"The Beatles\",\r\n        album: \"Let it Be\",\r\n        duration: 243\r\n    },\r\n    \"s7\" : {\r\n        id: \"s7\",\r\n        title: \"Baby\",\r\n        artist: \"Justin Bieber\",\r\n        album: \"My World 2.0\",\r\n        duration: 215\r\n    },\r\n    \"s8\": {\r\n        id: \"s8\",\r\n        title: \"Sonata Pathetique: Movement 1\",\r\n        artist: \"Ludwig van Beethoven\",\r\n        album: \"Beethoven: Piano Sonatas\",\r\n        duration: 400\r\n    },\r\n    \"s9\": {\r\n        id: \"s9\",\r\n        title: \"Take Five\",\r\n        artist: \"The Dave Brubeck Quartet\",\r\n        album: \"Time Out\",\r\n        duration: 324\r\n    }\r\n}\r\n\r\nexport const playlistMap: PlaylistMap = {\r\n    abc: {\r\n        id: \"abc\",\r\n        title: \"60s/70s Rock\",\r\n        pictureURL: \"/album.jpg\",\r\n        description: \"Best rock songs of the 1960s and 1970s\",\r\n        songIds: [\"123\", \"456\", \"s7\"],\r\n        creator: \"aaron1200\",\r\n        admins: [\"joeiscool\", \"michelle1721\"],\r\n        addRequests: [\r\n            {\r\n                id: \"r1\",\r\n                song: songMap[\"s1\"],\r\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\", \"bigdolphin\"]\r\n            },\r\n            {\r\n                id: \"r2\",\r\n                song: songMap[\"s2\"],\r\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\"]\r\n            }\r\n        ],\r\n        removeRequests: [\r\n            {\r\n                id: \"r1\",\r\n                song: songMap[\"456\"],\r\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\"]\r\n            }\r\n        ]\r\n    },\r\n    def: {\r\n        id: \"def\",\r\n        title: \"Hype EDM\",\r\n        pictureURL: \"/bike.jpg\",\r\n        description: \"Big bass drops and crazy synths\",\r\n        songIds: [\"s3\"],\r\n        creator: \"hci2021\",\r\n        admins: [\"joeiscool\", \"michelle1721\"],\r\n        addRequests: [\r\n            {\r\n                id: \"r1\",\r\n                song: songMap[\"s4\"],\r\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\", \"bigdolphin\"]\r\n            },\r\n            {\r\n                id: \"r2\",\r\n                song: songMap[\"s5\"],\r\n                usersVoted: [\"jack1298\", \"carol1522\", \"hd123\"]\r\n            }\r\n        ],\r\n        removeRequests: []\r\n    },\r\n    classical: {\r\n        id: \"classical\",\r\n        title: \"Classical music for studying\",\r\n        pictureURL: \"/classical.jpg\",\r\n        description: \"Relaxing classical music for studying - no lyrics\",\r\n        songIds: [\"s8\"],\r\n        creator: \"joeiscool\",\r\n        admins: [],\r\n        addRequests: [],\r\n        removeRequests: []\r\n    },\r\n    jazz: {\r\n        id: \"jazz\",\r\n        title: \"Smooth Jazz\",\r\n        pictureURL: \"/jazz.jpg\",\r\n        description: \"Warm jazz for cool nights\",\r\n        songIds: [\"s9\"],\r\n        creator: \"michelle1721\",\r\n        admins: [],\r\n        addRequests: [],\r\n        removeRequests: []\r\n    }\r\n}\r\n","import React, { ChangeEvent, Component } from 'react'\r\nimport { Form, FormControl, Table } from 'react-bootstrap';\r\nimport { playlistMap } from '../data';\r\n\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  dark?: boolean; \r\n}\r\n\r\ninterface State {\r\n  searchQuery: string;\r\n  searchFocused: boolean;\r\n}\r\n\r\nexport default class PlaylistSearchBar extends Component<Props, State>  {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchQuery: \"\",\r\n      searchFocused: false\r\n    }\r\n\r\n    this.updateSearchQuery = this.updateSearchQuery.bind(this);\r\n  }\r\n\r\n  updateSearchQuery(event: ChangeEvent<HTMLInputElement>) {\r\n    this.setState({\r\n        searchQuery: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n   let results = Array.from(Object.entries(playlistMap))\r\n                      .filter(([_, playlist]) =>\r\n                          playlist.title.toLowerCase().includes(this.state.searchQuery.toLowerCase()))\r\n\r\n    return (\r\n      <Form className=\"d-flex mx-3\" style={{width: \"305px\"}} onFocus={() => {this.setState({})}}>\r\n        <FormControl\r\n                autoFocus\r\n                style={{borderColor: this.props.dark ? \"black\" : \"white\"}}\r\n                placeholder={this.props.placeholder}\r\n                value={this.state.searchQuery}\r\n                onChange={this.updateSearchQuery}\r\n            />\r\n            {\r\n                this.state.searchQuery ?\r\n                    (\r\n                        <Table className=\"w-auto\" style={{position: \"absolute\", backgroundColor: \"white\", marginTop: \"35px\", zIndex: 1000, border: \"lightgray 2px solid\", borderRadius: \"0px 0px 5px 5px\"}}>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Title</th>\r\n                                <th>Creator</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            { results.length === 0 && \r\n                                <tr>\r\n                                  <td>\r\n                                    <span style={{color: 'gray'}}>Nothing found.</span>\r\n                                  </td>\r\n                                  <td>\r\n                                    \r\n                                  </td>\r\n                                </tr> \r\n                            }\r\n\r\n                            {\r\n                                results.map(([_, playlist]) => (\r\n                                        <tr className=\"dropdown-item\"\r\n                                            role=\"button\"\r\n                                            style={{display: \"table-row\"}}\r\n                                            onClick={() => { \r\n                                              window.location.href = `#/playlist/${playlist.id}`\r\n                                              this.setState({searchFocused: false, searchQuery: \"\"}); \r\n                                            }}\r\n                                            key={playlist.id}\r\n                                        >\r\n                                            <td>{playlist.title}</td>\r\n                                            <td>{playlist.creator}</td>\r\n                                        </tr>\r\n                                    ))\r\n                            }\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                    : \"\"\r\n            }\r\n    </Form>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport {Navbar, Button, Nav, Image} from 'react-bootstrap'\r\nimport {User} from '../types'\r\nimport PlaylistSearchBar from './PlaylistSearchBar'\r\n\r\ninterface CustomNavbarProps {\r\n    user: User | null;\r\n    toggleLoginModal: (callback?: () => void) => () => void;\r\n}\r\n\r\ninterface CustomNavbarState {\r\n    hash: string;\r\n}\r\n\r\nexport default class CustomNavbar extends React.Component<CustomNavbarProps, CustomNavbarState> {\r\n\r\n    constructor(props: CustomNavbarProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hash: window.location.hash\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('hashchange', () => {\r\n            this.setState({\r\n                hash: window.location.hash\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Navbar style={{backgroundColor: \"#6eaedd\"}} variant=\"dark\" className=\"museo-300\">\r\n                <Navbar.Brand href=\"#\">\r\n                    <p className=\"museo-display-black m-0\">Spotify Collaborative Playlists</p>\r\n                </Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    {this.state.hash !== \"#/\" && <PlaylistSearchBar placeholder=\"Search for playlists...\"/>}\r\n                </Nav>\r\n                {\r\n                    this.props.user ?\r\n                        <>\r\n                            <Navbar.Text >\r\n                                Logged in as\r\n                                <Nav.Link className=\"d-inline p-0 ml-2\" href={`#/user/${this.props.user.username}`} style={{textDecorationLine: \"underline\"}} >\r\n                                <span>\r\n                                    {this.props.user.displayName}\r\n                                    <Image fluid src={process.env.PUBLIC_URL + this.props.user.profilePictureURL}\r\n                                           style={{maxWidth: \"30px\", marginLeft: \"5px\"}}/>\r\n                                </span>\r\n                                </Nav.Link>\r\n                            </Navbar.Text>\r\n                            <Button variant=\"light\" className=\"ml-5\" onClick={() => window.location.reload()}>Log out</Button>\r\n                        </> :\r\n                        <Button variant=\"light\" onClick={this.props.toggleLoginModal()}>\r\n                            Log in with Spotify\r\n                        </Button>\r\n                }\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Col, Container, Row, Image } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport PlaylistSearchBar from '../../common/components/PlaylistSearchBar';\r\nimport {playlistMap, userMap} from '../../common/data';\r\n\r\nclass Homepage extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container className=\"museo-300\">\r\n                <Row>\r\n                    <Col className=\"text-left d-flex flex-column justify-content-center align-items-center\" style={{height: \"50vh\"}}>\r\n                        <h1 className=\"museo-display-black mb-3\">\r\n                            Spotify Collaborative Playlists\r\n                        </h1>\r\n                        <PlaylistSearchBar placeholder=\"Search for playlists...\" dark={true}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <h3 className=\"museo-display-light mb-1\">\r\n                            Recommended Playlists\r\n                        </h3>\r\n                        <hr style={{border: \"1px solid lightgrey\"}} className=\"mb-4\"/>\r\n                    </Col>\r\n                    { Array.from(Object.entries(playlistMap))\r\n                        .slice(0, 4)\r\n                        .map(([_, playlist]) => {\r\n                            return (   \r\n                                <Col xs=\"3\" style={{padding: \".5em\"}} key={playlist.id}>\r\n                                    <Link to={`/playlist/${playlist.id}`}>\r\n                                        <div style={{boxShadow: \"1px 1px 10px gray\", padding: \".75em\", borderRadius: \"10px\", height: \"100%\"}}> \r\n                                            <Image className=\"mb-3\" fluid src={process.env.PUBLIC_URL + playlist.pictureURL} />\r\n                                            <p className=\"mb-1 museo-700\">{playlist.title}</p>\r\n                                            <p className=\"mb-1\">{userMap[playlist.creator].displayName}</p>\r\n                                            <p className=\"mb-1\">{playlist.songIds.length} {playlist.songIds.length === 1 ? \"song\" : \"songs\"}</p>\r\n                                        </div>\r\n                                    </Link>\r\n                                </Col>\r\n                            )\r\n                        })\r\n\r\n\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;","const SECONDS_PER_MINUTE = 60;\r\nconst MINUTES_PER_HOUR = 60;\r\n\r\nexport function secondsToMinutesString(seconds: number) {\r\n    return `${Math.floor(seconds / SECONDS_PER_MINUTE)}:${(seconds % SECONDS_PER_MINUTE).toString().padStart(2, \"0\")}`;\r\n}\r\n\r\nexport function secondsToHoursString(seconds: number) {\r\n    return `${Math.floor(seconds / (SECONDS_PER_MINUTE * MINUTES_PER_HOUR))} hr ${(Math.floor(seconds % (SECONDS_PER_MINUTE * MINUTES_PER_HOUR) / SECONDS_PER_MINUTE))} min`;\r\n}\r\n\r\nexport function sum(nums: number[]) {\r\n    return nums.reduce((a, b) => a + b, 0)\r\n}\r\n","import React from 'react';\r\nimport {Button, Col, Container, Row, Table, Image} from \"react-bootstrap\";\r\nimport {playlistMap, songMap, userMap} from \"../../common/data\";\r\nimport {secondsToHoursString, secondsToMinutesString, sum} from \"../../common/utils\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useHistory} from \"react-router\";\r\n\r\ninterface Props {\r\n    match: {\r\n        params: {\r\n            playlistId: string;\r\n        }\r\n    },\r\n    loggedInUsername?: string;\r\n    toggleLoginModal: (callback?: () => void) => () => void;\r\n}\r\n\r\nexport default function PlaylistPage(props: Props) {\r\n    const history = useHistory();\r\n\r\n    const playlist = playlistMap[props.match.params.playlistId];\r\n    const creator = userMap[playlist.creator];\r\n    const songs = playlist.songIds.map(id => songMap[id]);\r\n\r\n    const addRequestCallback = () => history.push({\r\n        pathname: `/playlist/${playlist.id}/requests`,\r\n        state: {showAddSong: true}\r\n    });\r\n\r\n    const removeRequestCallback = () => history.push({\r\n        pathname: `/playlist/${playlist.id}/requests`,\r\n        state: {showRemoveSong: true}\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"my-4\">\r\n                <Col xs={4}>\r\n                    <Image src={process.env.PUBLIC_URL + playlist.pictureURL} alt=\"Album cover\" fluid/>\r\n                </Col>\r\n                <Col xs={4}>\r\n                    <p className=\"museo-display-light m-0\">Playlist</p>\r\n                    <h1 className=\"museo-display-black\">{playlist.title}</h1>\r\n                    <p className=\"museo-300 mb-0\">Created by <Link to={`/user/${creator.username}`}>{creator.displayName}</Link></p>\r\n                    <p className=\"museo-300 italic\">{songs.length} {songs.length === 1 ? \"song\" : \"songs\"}, {secondsToHoursString(sum(songs.map(song => song.duration)))}</p>\r\n                    <Button \r\n                        variant=\"outline-dark\" \r\n                        className=\"museo-300\" \r\n                        onClick={() => {\r\n                            let link = window.location.href\r\n                            navigator.clipboard.writeText(link).then(() => {\r\n                                alert('Playlist link copied to clipboard!')\r\n                            })\r\n                    }}>\r\n                        Share\r\n                    </Button>\r\n                </Col>\r\n                <Col xs={4} className=\"text-right\">\r\n                    { (creator.username !== props.loggedInUsername) && (\r\n                        <div>\r\n                            <Button variant=\"outline-primary\" className=\"museo-300 mb-2\"\r\n                                    onClick={props.loggedInUsername === undefined ? props.toggleLoginModal(addRequestCallback) : addRequestCallback}>\r\n                                Request to add a song\r\n                            </Button>\r\n                            <br />\r\n                            <Button variant=\"outline-danger\" className=\"museo-300 mb-2\"\r\n                                    onClick={props.loggedInUsername === undefined ? props.toggleLoginModal(removeRequestCallback) : removeRequestCallback}>\r\n                                Request to remove a song\r\n                            </Button>\r\n                            <Link to={`/playlist/${playlist.id}/requests`}>\r\n                                <Button variant=\"outline-secondary\" className=\"museo-300 mb-2\">View song requests</Button><br />\r\n                            </Link>\r\n                            <p className=\"museo-300 mb-2\">If you're an admin of this playlist, log in to manage song requests.</p>\r\n                        </div>\r\n                    )}\r\n                    { (creator.username === props.loggedInUsername) && (\r\n                        <div>\r\n                            <Link to={`/playlist/${playlist.id}/requests`}>\r\n                                <Button variant=\"primary\" className=\"museo-300 mb-2\">Manage Song Requests</Button><br />\r\n                            </Link>\r\n                            <Link to={`/playlist/${playlist.id}/admins`}>\r\n                                <Button variant=\"outline-secondary\" className=\"museo-300 mb-2\">Manage Administrators</Button><br />\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Table striped bordered hover className=\"museo-300\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Title</th>\r\n                            <th>Artist</th>\r\n                            <th>Album</th>\r\n                            <th>Date Added</th>\r\n                            <th>Duration</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            Array.from(songs.entries()).map(([i, song]) => (\r\n                                <tr key={song.id}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td>{song.title}</td>\r\n                                    <td>{song.artist}</td>\r\n                                    <td>{song.album}</td>\r\n                                    <td>2021-03-30</td>\r\n                                    <td>{secondsToMinutesString(song.duration)}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Alert, Button, Col, Container, Form, FormControl, Modal, Row, Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { playlistMap, songMap, userMap } from \"../../common/data\";\r\nimport { secondsToMinutesString } from \"../../common/utils\";\r\nimport { SongRequest } from \"../../common/types\";\r\nimport \"./style.css\";\r\nimport { ChangeEvent } from 'react';\r\nimport { Playlist } from '../../common/types';\r\n\r\ninterface RequestsTableProps {\r\n    requests: SongRequest[];\r\n    adminPermissions: boolean;\r\n    handleAcceptRequest: (songId: string, requestId: string) => () => void;\r\n    removeVote: (requestId: string) => () => void;\r\n    addVote: (requestId: string) => () => void;\r\n    loggedInUsername?: string;\r\n    toggleLoginModal: (callback?: () => void) => () => void;\r\n}\r\n\r\nclass RequestsTable extends Component<RequestsTableProps> {\r\n    render() {\r\n        return (\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"customHeader-1\">#</th>\r\n                        <th className=\"customHeader-2\">Title</th>\r\n                        <th className=\"customHeader-2\">Artist</th>\r\n                        <th className=\"customHeader-2\">Album</th>\r\n                        <th className=\"customHeader-1\">Date Added</th>\r\n                        <th className=\"customHeader-1\">Duration</th>\r\n                        <th className=\"customHeader-1\">Votes</th>\r\n                        <th className=\"customHeader-2\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        Array.from(this.props.requests.entries()).map(([i, request]) => (\r\n                            <tr key={request.id}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{request.song.title}</td>\r\n                                <td>{request.song.artist}</td>\r\n                                <td>{request.song.album}</td>\r\n                                <td>2021-03-30</td>\r\n                                <td>{secondsToMinutesString(request.song.duration)}</td>\r\n                                <td>{request.usersVoted.length}</td>\r\n                                <td>\r\n                                    {this.props.adminPermissions ? <Button variant=\"primary\"\r\n                                                                           onClick={this.props.handleAcceptRequest(request.song.id, request.id)}>Accept\r\n                                            Request</Button> :\r\n                                        (this.props.loggedInUsername !== undefined && request.usersVoted.includes(this.props.loggedInUsername) ?\r\n                                            <Button variant=\"outline-secondary\" onClick={this.props.removeVote(request.id)}>\r\n                                                Remove Vote for Request\r\n                                            </Button> :\r\n                                            <Button variant=\"outline-secondary\"\r\n                                                    onClick={this.props.loggedInUsername === undefined ? this.props.toggleLoginModal(this.props.addVote(request.id)) : this.props.addVote(request.id) }\r\n                                            >\r\n                                                Vote for Request\r\n                                            </Button>)\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\ninterface Props {\r\n    match: {\r\n        params: {\r\n            playlistId: string;\r\n        }\r\n    }\r\n    location: {\r\n        state?: LocationState;\r\n    },\r\n    loggedInUsername?: string;\r\n    toggleLoginModal: (callback?: () => void) => () => void;\r\n    history: any; // todo fix this\r\n}\r\n\r\ninterface State {\r\n    showAddSong: boolean;\r\n    showRemoveSong: boolean;\r\n    addSearchQuery: string;\r\n    selectedAddSongId: string;\r\n    addSearchFocused: boolean;\r\n    removeSongIds: string[];\r\n    recentAddSongRequest: boolean;\r\n    recentRemoveSongRequest: boolean;\r\n}\r\n\r\ninterface LocationState {\r\n    showAddSong?: boolean;\r\n    showRemoveSong?: boolean;\r\n}\r\n\r\nconst REMOVE_REQUEST_TH_LABELS = {\r\n    \"#\": 1,\r\n    \"Title\": 2,\r\n    \"Artist\": 2,\r\n    \"Album\": 2,\r\n    \"Date Added\": 2,\r\n    \"Duration\": 1,\r\n    \"Actions\": 2\r\n}\r\n\r\nexport default class RequestsPage extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            showAddSong: (this.props.location.state !== undefined) && (this.props.location.state.showAddSong === true),\r\n            showRemoveSong: (this.props.location.state !== undefined) && (this.props.location.state.showRemoveSong === true),\r\n            addSearchQuery: \"\",\r\n            selectedAddSongId: \"\",\r\n            addSearchFocused: false,\r\n            removeSongIds: [],\r\n            recentAddSongRequest: false,\r\n            recentRemoveSongRequest: false\r\n        }\r\n        this.toggleAddSong = this.toggleAddSong.bind(this);\r\n        this.toggleRemoveSong = this.toggleRemoveSong.bind(this);\r\n        this.updateSearchQuery = this.updateSearchQuery.bind(this);\r\n        this.handleAcceptAddRequest = this.handleAcceptAddRequest.bind(this);\r\n        this.handleAcceptRemoveRequest = this.handleAcceptRemoveRequest.bind(this);\r\n        this.removeVote = this.removeVote.bind(this);\r\n        this.addVote = this.addVote.bind(this);\r\n    }\r\n\r\n    toggleAddSong() {\r\n        this.setState(prevState => ({ addSearchQuery: \"\", addSearchFocused: false, selectedAddSongId: \"\", showAddSong: !prevState.showAddSong }));\r\n    }\r\n\r\n    toggleRemoveSong() {\r\n        this.setState(prevState => ({ removeSongIds: [], showRemoveSong: !prevState.showRemoveSong }));\r\n    }\r\n\r\n    removeVote(isAddRequest: boolean) {\r\n        return (requestId: string) => () => {\r\n            if (this.props.loggedInUsername !== undefined) {\r\n                let requestList;\r\n                if (isAddRequest) {\r\n                    requestList = playlistMap[this.props.match.params.playlistId].addRequests;\r\n                } else {\r\n                    requestList = playlistMap[this.props.match.params.playlistId].removeRequests;\r\n                }\r\n                const request = requestList.find(request => request.id === requestId);\r\n                if (request !== undefined) {\r\n                    request.usersVoted = request.usersVoted.filter(user => user !== \"hci2021\");\r\n                    this.forceUpdate();\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    addVote(isAddRequest: boolean) {\r\n        return (requestId: string) => () => {\r\n            if (this.props.loggedInUsername !== undefined) {\r\n                let requestList;\r\n                if (isAddRequest) {\r\n                    requestList = playlistMap[this.props.match.params.playlistId].addRequests;\r\n                } else {\r\n                    requestList = playlistMap[this.props.match.params.playlistId].removeRequests;\r\n                }\r\n                const request = requestList.find(request => request.id === requestId);\r\n                if (request !== undefined && !request.usersVoted.includes(\"hci2021\")) {\r\n                    request.usersVoted.push(\"hci2021\");\r\n                    this.forceUpdate();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSearchQuery(event: ChangeEvent<HTMLInputElement>) {\r\n        this.setState({\r\n            addSearchQuery: event.target.value\r\n        });\r\n    }\r\n\r\n    handleAcceptAddRequest(songId: string, requestId: string) {\r\n        return () => {\r\n            let playlist: Playlist = playlistMap[this.props.match.params.playlistId];\r\n            playlist.addRequests = playlist.addRequests.filter((request) => request.id !== requestId);\r\n            playlist.songIds = playlist.songIds.concat(songId);\r\n\r\n            playlistMap[this.props.match.params.playlistId] = playlist;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    handleAcceptRemoveRequest(songId: string, requestId: string) {\r\n        return () => {\r\n            let playlist: Playlist = playlistMap[this.props.match.params.playlistId];\r\n            playlist.removeRequests = playlist.removeRequests.filter((request) => request.id !== requestId);\r\n            playlist.songIds = playlist.songIds.filter((id) => id !== songId);\r\n\r\n            playlistMap[this.props.match.params.playlistId] = playlist;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const playlist = playlistMap[this.props.match.params.playlistId];\r\n        const creator = userMap[playlist.creator];\r\n        const songs = playlist.songIds.map(id => songMap[id]);\r\n\r\n        // replace instead of push because you can't push the same path\r\n        const addRequestCallback = () => this.props.history.replace({\r\n            state: {showAddSong: true}\r\n        });\r\n\r\n        const removeRequestCallback = () => this.props.history.replace({\r\n            state: {showRemoveSong: true}\r\n        });\r\n\r\n        const finishRequestingSongRemovals = () => {\r\n            this.state.removeSongIds.forEach(element => {\r\n                // todo fix s1234 repeated key\r\n                playlistMap[playlist.id].removeRequests.push({id: `r${playlistMap[playlist.id].removeRequests.length + 1}`, song: songMap[element], usersVoted: [\"hci2021\"]});\r\n            });\r\n            this.setState({addSearchQuery: \"\", addSearchFocused: false, removeSongIds: [], showAddSong: false, recentRemoveSongRequest: true});\r\n            setTimeout(function() {\r\n                //@ts-ignore (sorry!)\r\n                this.setState({recentRemoveSongRequest: false})\r\n            }.bind(this), 3000)\r\n            this.toggleRemoveSong();\r\n        };\r\n\r\n        return (\r\n            <Container className=\"museo-300\">\r\n                <Row className=\"mt-4\">\r\n                    <Col xs={12}>\r\n                        <Link to={`/playlist/${playlist.id}`}>&#8592; Go back to playlist</Link>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-4\">\r\n                    <Col xs={8}>\r\n                        <h1 className=\"museo-display-black\">Song Requests</h1>\r\n                        Playlist: <Link to={`/playlist/${playlist.id}`}>{playlist.title}</Link> by <Link to={`/user/${creator.username}`}>{creator.displayName}</Link>\r\n                    </Col>\r\n                    <Col xs={4} className=\"text-right\">\r\n                        {creator.username !== this.props.loggedInUsername && (\r\n                            <div>\r\n                                <Button variant=\"outline-primary\" className=\"museo-300 mb-2\"\r\n                                        onClick={this.props.loggedInUsername === undefined ? this.props.toggleLoginModal(addRequestCallback) : this.toggleAddSong}>\r\n                                    Request to add a song\r\n                                </Button>\r\n                                <br />\r\n                                <Button variant=\"outline-danger\" className=\"museo-300 mb-2\"\r\n                                        onClick={this.props.loggedInUsername === undefined ? this.props.toggleLoginModal(removeRequestCallback) : this.toggleRemoveSong}>\r\n                                    Request to remove a song\r\n                                </Button>\r\n                            </div>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-4\">\r\n                    <Col>\r\n                        <h2 className=\"museo-display-light\">Add Song Requests</h2>\r\n                        <Alert variant=\"success\" show={this.state.recentAddSongRequest}>\r\n                            Your request to add a song from the playlist was made successfully.\r\n                        </Alert> \r\n                        <RequestsTable handleAcceptRequest={this.handleAcceptAddRequest}\r\n                                       adminPermissions={creator.username === this.props.loggedInUsername}\r\n                                       requests={playlist.addRequests}\r\n                                       removeVote={this.removeVote(true)}\r\n                                       addVote={this.addVote(true)}\r\n                                       loggedInUsername={this.props.loggedInUsername}\r\n                                       toggleLoginModal={this.props.toggleLoginModal}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-4\">\r\n                    <Col>\r\n                        <h2 className=\"museo-display-light\">Remove Song Requests</h2>\r\n                        <Alert variant=\"success\" show={this.state.recentRemoveSongRequest}>\r\n                            Your request to remove a song from the playlist was made successfully.\r\n                        </Alert> \r\n                        <RequestsTable handleAcceptRequest={this.handleAcceptRemoveRequest}\r\n                                       adminPermissions={creator.username === this.props.loggedInUsername}\r\n                                       requests={playlist.removeRequests}\r\n                                       removeVote={this.removeVote(false)}\r\n                                       addVote={this.addVote(false)}\r\n                                       loggedInUsername={this.props.loggedInUsername}\r\n                                       toggleLoginModal={this.props.toggleLoginModal}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Modal show={this.state.showAddSong} animation={false} dialogClassName=\"larger-width-modal museo-300\" backdrop=\"static\">\r\n                    <Modal.Header>\r\n                        <Modal.Title className=\"museo-display-black\">Request to add a song</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"px-3\">\r\n                        <Form\r\n                            onFocus={() => this.setState({ addSearchFocused: true })}\r\n                        >\r\n                            <FormControl\r\n                                autoFocus\r\n                                className=\"my-2 w-auto\"\r\n                                placeholder=\"Type the song title here...\"\r\n                                value={this.state.addSearchQuery}\r\n                                onChange={this.updateSearchQuery}\r\n                            />\r\n                            {\r\n                                (this.state.addSearchQuery && (!this.state.selectedAddSongId || this.state.addSearchFocused)) ?\r\n                                    (\r\n                                        <Table className=\"mx-3 w-auto\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Song</th>\r\n                                                    <th>Artist</th>\r\n                                                    <th>Album</th>\r\n                                                    <th>Duration</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    Array.from(Object.entries(songMap))\r\n                                                        .filter(([_, song]) =>\r\n                                                            song.title.toLowerCase().includes(this.state.addSearchQuery.toLowerCase()))\r\n                                                        .map(([_, song]) => (\r\n                                                            <tr className=\"dropdown-item\"\r\n                                                                role=\"button\"\r\n                                                                style={{ display: \"table-row\" }}\r\n                                                                onClick={() => this.setState({ selectedAddSongId: song.id, addSearchFocused: false })}\r\n                                                                key={song.id}\r\n                                                            >\r\n                                                                <td>{song.title}</td>\r\n                                                                <td>{song.artist}</td>\r\n                                                                <td>{song.album}</td>\r\n                                                                <td>{secondsToMinutesString(song.duration)}</td>\r\n                                                            </tr>\r\n                                                        ))\r\n                                                }\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    )\r\n                                    : \"\"\r\n                            }\r\n                            {\r\n                                this.state.selectedAddSongId ? songMap[this.state.selectedAddSongId].title : \"\"\r\n                            }\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ justifyContent: \"flex-end\" }}>\r\n                        <Button variant=\"outline-secondary\" onClick={this.toggleAddSong}>\r\n                            Cancel and Close\r\n                        </Button>\r\n                        {\r\n                            this.state.selectedAddSongId ? (\r\n                                <Button variant=\"primary\" onClick={() => {\r\n                                    playlistMap[playlist.id].addRequests.push({id: `r${playlistMap[playlist.id].addRequests.length + 1}`, song: songMap[this.state.selectedAddSongId], usersVoted: [\"hci2021\"]});\r\n                                    this.setState({addSearchQuery: \"\", addSearchFocused: false, selectedAddSongId: \"\", showAddSong: false, recentAddSongRequest: true});\r\n                                    setTimeout(function() {\r\n                                        //@ts-ignore (sorry!)\r\n                                        this.setState({recentAddSongRequest: false})\r\n                                    }.bind(this), 3000)\r\n                                }}>\r\n                                    Request this song\r\n                                </Button>\r\n                            ) : \"\"\r\n                        }\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.showRemoveSong} animation={false} dialogClassName=\"larger-width-modal museo-300\" backdrop=\"static\">\r\n                    <Modal.Header>\r\n                        <Modal.Title className=\"museo-display-black\">Request to remove a song</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    {\r\n                                        Array.from(Object.entries(REMOVE_REQUEST_TH_LABELS)).map(([label, colWidth]) =>\r\n                                            <th key={label} className={\"customHeader-\" + colWidth}>{label}</th>\r\n                                        )\r\n                                    }\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    Array.from(songs.entries()).map(([i, song]) => (\r\n                                        this.state.removeSongIds.includes(song.id) ? (\r\n                                            <tr key={song.id}>\r\n                                                <td colSpan={Object.keys(REMOVE_REQUEST_TH_LABELS).length}>\r\n                                                    You requested to remove {song.title}.&nbsp;\r\n                                                <Button\r\n                                                        variant=\"outline-secondary\"\r\n                                                        onClick={() => this.setState(prevState => ({ removeSongIds: prevState.removeSongIds.filter(id => id !== song.id) }))}\r\n                                                    >\r\n                                                        Undo\r\n                                                </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ) : (\r\n                                                <tr key={song.id}>\r\n                                                    <td>{i + 1}</td>\r\n                                                    <td>{song.title}</td>\r\n                                                    <td>{song.artist}</td>\r\n                                                    <td>{song.album}</td>\r\n                                                    <td>2021-03-30</td>\r\n                                                    <td>{secondsToMinutesString(song.duration)}</td>\r\n                                                    <td><Button variant=\"outline-danger\" onClick={() => this.setState(prevState => {\r\n                                                        if (!prevState.removeSongIds.includes(song.id)) {\r\n                                                            return { removeSongIds: prevState.removeSongIds.concat(song.id) };\r\n                                                        }\r\n                                                        return { removeSongIds: prevState.removeSongIds };\r\n                                                    })}>Request to remove</Button></td>\r\n                                                </tr>\r\n                                            )\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ justifyContent: \"flex-end\" }}>\r\n                        <Button variant=\"primary\" onClick={finishRequestingSongRemovals}>\r\n                            Finish requesting song removals\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport { Col, Container, Row, Image, Table } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { playlistMap, userMap } from \"../../common/data\";\r\n\r\ninterface Props {\r\n    match: {\r\n        params: {\r\n            username: string;\r\n        }\r\n    }\r\n}\r\n\r\nexport default class UserProfile extends React.Component<Props> {\r\n    render() {\r\n        const user = userMap[this.props.match.params.username];\r\n        const playlists = user.playlistIds.map(id => playlistMap[id]);\r\n        return (\r\n            <Container className=\"museo-300\">\r\n                <Row className=\"my-4\">\r\n                    <Col xs={4}>\r\n                        <Image src={process.env.PUBLIC_URL + user.profilePictureURL} alt={`${user.displayName}'s profile`} fluid />\r\n                    </Col>\r\n                    <Col xs={8}>\r\n                        <h1 className=\"museo-display-black\">{user.displayName}</h1>\r\n                        <p className=\"m-0\">{user.followers} followers</p>\r\n                        <p>{playlists.length} playlists</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <h3 className=\"museo-display-light\">User Playlists</h3>\r\n                        <Table striped bordered hover className=\"museo-300\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Title</th>\r\n                                <th>Date Created</th>\r\n                                <th>Number of Songs</th>\r\n                                <th>Duration</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                Array.from(Object.entries(playlistMap))\r\n                                    .filter(([_, playlist]) => playlist.creator === user.username)\r\n                                    .map(([_, playlist]) => {\r\n                                        return (\r\n                                            <tr key={playlist.id}>\r\n                                                <td><Link to={`/playlist/${playlist.id}`}>{playlist.title}</Link></td>\r\n                                                <td>2021-03-30</td>\r\n                                                <td>{playlist.songIds.length}</td>\r\n                                                <td>9 min</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Button, Container, Row, Col, Modal, Form, FormControl, Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { playlistMap, userMap } from \"../../common/data\";\r\nimport { ChangeEvent } from 'react';\r\n\r\ninterface Props {\r\n    match: {\r\n        params: {\r\n            playlistId: string;\r\n        }\r\n    }\r\n}\r\n\r\ninterface State {\r\n    showHide: boolean;\r\n    searchQuery: string;\r\n    selectedAdminUsername: string;\r\n    searchFocused: boolean;\r\n}\r\n\r\nexport default class ManageAdmin extends React.Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            showHide: false,\r\n            searchQuery: \"\",\r\n            selectedAdminUsername: \"\",\r\n            searchFocused: false\r\n        }\r\n        this.handleModalShowHide = this.handleModalShowHide.bind(this);\r\n        this.updateSearchQuery = this.updateSearchQuery.bind(this);\r\n    }\r\n\r\n    handleModalShowHide() {\r\n        this.setState({ showHide: !this.state.showHide })\r\n    }\r\n\r\n    updateSearchQuery(event: ChangeEvent<HTMLInputElement>) {\r\n        this.setState({\r\n            searchQuery: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const playlist = playlistMap[this.props.match.params.playlistId];\r\n        const creator = userMap[playlist.creator];\r\n        return (\r\n            <Container className=\"museo-300\">\r\n                <Row className=\"my-4\">\r\n                    <Col xs={12}>\r\n                        <Link to={`/playlist/${playlist.id}`}>&#8592; Go back to playlist</Link>\r\n                        <h1 className=\"museo-display-black\">Manage Administrators</h1>\r\n                        <p>Playlist: <Link to={`/playlist/${playlist.id}`}>{playlist.title}</Link> by <Link to={`/user/${creator.username}`}>{creator.displayName}</Link></p>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-4\">\r\n                    <Col xs={12}>\r\n                        <h3 className=\"museo-display-light\">Current Administrators</h3>\r\n                        {playlist.admins.length > 0 && \r\n                            <ul>\r\n                                {playlist.admins.map((adminName) => (\r\n                                    <li key={adminName}>\r\n                                        <p className=\"m-0\">{adminName}</p>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        }\r\n                        {!(playlist.admins.length > 0) && <p>There are no admins for this playlist. Add one to help manage requests.</p>}\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-2\">\r\n                    <Col xs={12}>\r\n                        <Button variant=\"primary\" onClick={() => this.handleModalShowHide()}>Add new Administrator</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Button variant=\"danger\">Remove an Administrator</Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Modal show={this.state.showHide} backdrop=\"static\" dialogClassName=\"museo-300\">\r\n                    <Modal.Header onClick={() => this.handleModalShowHide()}>\r\n                        <Modal.Title className=\"museo-display-black\">Add new Administrator</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form onFocus={() => this.setState({ searchFocused: true })}>\r\n                            <FormControl autoFocus\r\n                                className=\"mx-3 my-2 w-auto\"\r\n                                placeholder=\"Type a username...\"\r\n                                value={this.state.searchQuery}\r\n                                onChange={this.updateSearchQuery} />\r\n                            {\r\n                                (this.state.searchQuery && (!this.state.selectedAdminUsername || this.state.searchFocused)) ?\r\n                                    (\r\n                                        <Table className=\"mx-3 w-auto\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Users</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    Array.from(Object.entries(userMap))\r\n                                                        .filter(([_, user]) =>\r\n                                                            user.username.toLowerCase().includes(this.state.searchQuery.toLowerCase()) && !playlist.admins.includes(user.username)) \r\n                                                        .map(([_, user]) => (\r\n                                                            <tr className=\"dropdown-item\"\r\n                                                                role=\"button\"\r\n                                                                style={{ display: \"table-row\" }}\r\n                                                                onClick={() => { this.setState({ selectedAdminUsername: user.username, searchFocused: false }); console.log(user.username) }}\r\n                                                            >\r\n                                                                <td>{user.username}</td>\r\n                                                            </tr>\r\n                                                        ))\r\n                                                }\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    )\r\n                                    : \"\"\r\n                            }\r\n                            {\r\n                                this.state.selectedAdminUsername ? userMap[this.state.selectedAdminUsername].username : \"\"\r\n                            }\r\n                            {/* <Button variant=\"secondary\" style={{ borderRadius: \"0px 5px 5px 0px\", borderLeft: \"none\" }}>Search</Button> */}\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ justifyContent: \"flex-end\" }}>\r\n                        <Button variant=\"secondary\" onClick={() => { this.setState({ searchQuery: \"\", searchFocused: false, selectedAdminUsername: \"\", showHide: false }) }}>\r\n                            Close this window\r\n                        </Button>\r\n                        {\r\n                            this.state.selectedAdminUsername ? (\r\n                                <Button variant=\"primary\" onClick={() => {\r\n                                    playlistMap[playlist.id].admins.push(userMap[this.state.selectedAdminUsername].username);\r\n                                    this.setState({searchQuery: \"\", searchFocused: false, selectedAdminUsername: \"\", showHide: false});\r\n                                }}>\r\n                                    Add Administrator\r\n                                </Button>\r\n                            ) : \"\"\r\n                        }\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { ChangeEvent } from 'react';\r\nimport {Button, Container, Modal} from 'react-bootstrap';\r\nimport {HashRouter as Router, Route} from 'react-router-dom'\r\nimport CustomNavbar from './common/components/CustomNavbar';\r\n\r\nimport Homepage from './pages/homepage';\r\nimport PlaylistPage from './pages/playlist';\r\n\r\nimport './common/css/typography.css';\r\nimport RequestsPage from \"./pages/requests\";\r\nimport UserProfile from './pages/userprofilepage';\r\nimport ManageAdmin from './pages/manageadministrators';\r\n\r\nimport { User } from './common/types';\r\nimport { Form } from 'react-bootstrap';\r\nimport { userMap } from './common/data';\r\n\r\n\r\ninterface State {\r\n    showHide: boolean;\r\n    loggedInUser: User | null;\r\n    inputUsername: string;\r\n    inputPassword: string;\r\n    loginCallback?: () => void;\r\n    error: \"username\" | \"password\" | \"not-filled\" | \"\";\r\n}\r\n\r\nclass PLAYLISTS_APP extends React.Component<{}, State> {\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showHide: false,\r\n            loggedInUser: null,\r\n            inputUsername: \"\",\r\n            inputPassword: \"\",\r\n            error: \"\"\r\n        }\r\n\r\n        this.handleModalShowHide = this.handleModalShowHide.bind(this);\r\n        this.handleLoginSubmission = this.handleLoginSubmission.bind(this);\r\n    }\r\n\r\n    handleModalShowHide(callback?: () => void): () => void {\r\n        return () => {\r\n            this.setState(prevState => ({ showHide: !prevState.showHide, loginCallback: callback }));\r\n        };\r\n    }\r\n\r\n    handleLoginInput(type: 'username' | 'password'): (event: ChangeEvent<HTMLInputElement>) => void {\r\n        if (type === \"username\") {\r\n            return (event: ChangeEvent<HTMLInputElement>) => {\r\n                this.setState({inputUsername: event.target.value, error: \"\"})\r\n            }\r\n        } else {\r\n            return (event: ChangeEvent<HTMLInputElement>) => {\r\n                this.setState({inputPassword: event.target.value, error: \"\"})\r\n            }\r\n        }\r\n    }\r\n\r\n    handleLoginSubmission(): void {\r\n        if (this.state.inputUsername && this.state.inputPassword) {\r\n            if (this.state.inputPassword.toLowerCase() === \"password\" && this.state.inputUsername.toLowerCase() === \"hci2021\") {\r\n                if (this.state.loginCallback !== undefined) {\r\n                    this.state.loginCallback();\r\n                }\r\n                this.setState({\r\n                    loggedInUser: userMap['hci2021'],\r\n                    showHide: false,\r\n                    inputPassword: \"\",\r\n                    inputUsername: \"\",\r\n                    loginCallback: undefined\r\n                });\r\n            } else {\r\n                if (this.state.inputUsername.toLowerCase() !== \"hci2021\") {\r\n                    this.setState({\r\n                        inputPassword: \"\",\r\n                        inputUsername: \"\",\r\n                        error: \"username\"\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        inputPassword: \"\",\r\n                        error: \"password\"\r\n                    })\r\n                }\r\n            }\r\n        } else {\r\n            this.setState({\r\n                error: \"not-filled\"\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let { loggedInUser } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <CustomNavbar user={loggedInUser} toggleLoginModal={this.handleModalShowHide}/>\r\n                <Container fluid>\r\n                    <Router>\r\n                        <Route path=\"/\" component={Homepage} exact/>\r\n\r\n                        {/* In order to access this playlist ID from the pages that need it, you need to use props.match.params.<VARIABLE_NAME> in that component */}\r\n\r\n                        {/*@ts-ignore */}\r\n                        <Route path=\"/playlist/:playlistId\" component={({ match }) =>\r\n                                   <PlaylistPage loggedInUsername={loggedInUser ? loggedInUser.username : undefined} match={match} toggleLoginModal={this.handleModalShowHide} />\r\n                               }\r\n                               exact\r\n                        />\r\n                        {/*@ts-ignore */}\r\n                        <Route path=\"/playlist/:playlistId/requests\" component={({ match, location, history }) =>\r\n                                   <RequestsPage loggedInUsername={loggedInUser ? loggedInUser.username : undefined}\r\n                                                 match={match}\r\n                                                 location={location}\r\n                                                 history={history}\r\n                                                 toggleLoginModal={this.handleModalShowHide} />\r\n                               }\r\n                               exact\r\n                        />\r\n\r\n                        {/* Route to User profile page */}\r\n                        <Route path=\"/user/:username\" component={UserProfile} exact/>\r\n\r\n                        {/* Route to Manage admins page */}\r\n                        <Route path=\"/playlist/:playlistId/admins\" component={ManageAdmin} exact/>\r\n                    </Router>\r\n\r\n                    <Modal show={this.state.showHide} animation={false} backdrop=\"static\" dialogClassName=\"museo-300\">\r\n                    <Modal.Header onClick={() => this.handleModalShowHide()}>\r\n                        <Modal.Title className=\"museo-display-black\">Log into your account</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formUsername\">\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter username...\" value={this.state.inputUsername} onChange={this.handleLoginInput('username')} isInvalid={this.state.error === \"username\"} />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Username not found, please try again.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Enter password...\" value={this.state.inputPassword} onChange={this.handleLoginInput('password')} isInvalid={this.state.error === \"password\"} />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Incorrect password, please try again.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            {\r\n                                (this.state.error === \"not-filled\") \r\n                                    && \r\n                                <p className=\"text-danger\" style={{fontSize: \"80%\", marginBottom: 0}}>\r\n                                    Please fill out all login fields.\r\n                                </p>\r\n                            }\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{justifyContent: \"flex-end\"}}>\r\n                        <Button variant=\"primary\" onClick={this.handleLoginSubmission}>\r\n                            Log in\r\n                        </Button>\r\n                        <Button variant=\"outline-danger\" onClick={() => {this.setState({inputPassword: \"\", inputUsername: \"\", showHide: false, loginCallback: undefined})}}>\r\n                            Close this window\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PLAYLISTS_APP;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './PLAYLISTS_APP';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}